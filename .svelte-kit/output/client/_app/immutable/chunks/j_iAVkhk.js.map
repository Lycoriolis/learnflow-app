{"version":3,"file":"j_iAVkhk.js","sources":["../../../../../../src/lib/stores/pipStores.ts"],"sourcesContent":["import { writable } from 'svelte/store';\nimport { persistentStore } from './persistentStore.js';\n\n// State for the PiP widget itself\nexport const pipVisible = writable(false);\nexport const pipMinimized = writable(false);\nexport const activePipTool = persistentStore('learnflow-active-pip-tool', null); // Persist active tool\n\n// Currently active tool in the PIP widget\nexport const activeTool = writable('timer');\n\n// --- Timer Store --- (Types defined inline for simplicity, move to $types later if needed)\nexport interface TimerMode {\n\ttype: 'work' | 'shortBreak' | 'longBreak';\n}\n\nexport interface TimerState {\n\tmode: TimerMode;\n\ttimeLeft: number;\n\tisRunning: boolean;\n\tcycle: number; // Number of work cycles completed\n}\n\nexport interface TimerSettings {\n\tworkDuration: number;        // in seconds\n\tshortBreakDuration: number;  // in seconds\n\tlongBreakDuration: number;   // in seconds\n\tlongBreakInterval: number;   // number of work sessions before long break\n}\n\nconst initialTimerState: TimerState = {\n\tmode: { type: 'work' },\n\ttimeLeft: 25 * 60, // Default 25 mins work\n\tisRunning: false,\n\tcycle: 0\n};\n\n// Active timer state (persistent)\nexport const timerState = persistentStore<TimerState>('learnflow-timer-state', initialTimerState);\n\n// Timer settings with default values\nexport const timerSettings = persistentStore<TimerSettings>('learnflow-timer-settings', {\n\tworkDuration: 25 * 60,        // 25 minutes\n\tshortBreakDuration: 5 * 60,   // 5 minutes\n\tlongBreakDuration: 15 * 60,   // 15 minutes\n\tlongBreakInterval: 4          // Long break after 4 work sessions\n});\n\n// --- Todo Store ---\nexport interface TodoItem {\n\tid: string;\n\ttext: string;\n\tcompleted: boolean;\n\tcreatedAt: number;\n\tdescription?: string;\n\tdeadline?: string; // ISO date string\n\temergency?: number; // 1-5 scale\n\ttag?: string;\n}\nexport const todos = persistentStore<TodoItem[]>('learnflow-todos', []);\n\n// --- Notes Store ---\nexport interface NoteItem {\n\tid: string;\n\ttitle: string;\n\tcontent: string; // Markdown content\n\tcreatedAt: number;\n\tupdatedAt: number;\n}\nexport const notes = persistentStore<NoteItem[]>('learnflow-notes', []);\n\n// --- Notepad Content Store ---\nexport const notepadContent = persistentStore<string>('learnflow-notepad-content', '');\n\n// --- Focus Session Store ---\nexport interface FocusSession {\n\ttimestamp: number; // When the session ended (Date.now())\n\tduration: number;  // Duration in seconds\n}\n\n// Store an array of completed focus sessions (persistent)\nexport const focusSessions = persistentStore<FocusSession[]>('learnflow-focus-sessions', []);\n\n// --- Exercise Sessions Store ---\nexport interface ExerciseSession {\n  exerciseId: string;\n  timestamp: number;\n  completed: boolean;\n}\n// Store an array of completed exercise sessions (persistent)\nexport const exerciseSessions = persistentStore<ExerciseSession[]>('learnflow-exercise-sessions', []);\n\n// --- Flashcards Store ---\nexport interface Flashcard {\n  id: string;\n  front: string;\n  back: string;\n  lastReviewed?: number;\n  nextReview?: number;\n  level: number; // 0-5 for spaced repetition\n  tags: string[];\n}\n\nexport const flashcards = persistentStore<Flashcard[]>('learnflow-flashcards', []);\nexport const flashcardStats = writable({\n  totalReviews: 0,\n  correctReviews: 0,\n  streakDays: 0,\n  lastReviewDate: null as number | null\n});\n\n// --- Calculator Store --- (Transient state)\nexport const calcDisplay = writable('0');\nexport const calcCurrentInput = writable('');\nexport const calcOperator = writable<string | null>(null);\nexport const calcPreviousValue = writable<number | null>(null);\nexport const calcWaitingForSecondOperand = writable(false);"],"names":["pipVisible","writable","persistentStore","activeTool","initialTimerState","timerState","timerSettings","todos","notes","notepadContent","focusSessions","exerciseSessions","calcDisplay","calcCurrentInput","calcOperator","calcPreviousValue","calcWaitingForSecondOperand"],"mappings":"oEAIa,MAAAA,EAAaC,EAAS,EAAK,EAEXC,EAAgB,4BAA6B,IAAI,EAGjE,MAAAC,EAAaF,EAAS,OAAO,EAqBpCG,EAAgC,CACrC,KAAM,CAAE,KAAM,MAAO,EACrB,SAAU,GAAK,GACf,UAAW,GACX,MAAO,CACR,EAGaC,EAAaH,EAA4B,wBAAyBE,CAAiB,EAGnFE,EAAgBJ,EAA+B,2BAA4B,CACvF,aAAc,GAAK,GACnB,mBAAoB,EAAI,GACxB,kBAAmB,GAAK,GACxB,kBAAmB,CACpB,CAAC,EAaYK,EAAQL,EAA4B,kBAAmB,CAAE,CAAA,EAUzDM,EAAQN,EAA4B,kBAAmB,CAAE,CAAA,EAGzDO,EAAiBP,EAAwB,4BAA6B,EAAE,EASxEQ,EAAgBR,EAAgC,2BAA4B,CAAE,CAAA,EAS9ES,EAAmBT,EAAmC,8BAA+B,CAAE,CAAA,EAa1EA,EAA6B,uBAAwB,CAAE,CAAA,EASpE,MAAAU,EAAcX,EAAS,GAAG,EAC1BY,EAAmBZ,EAAS,EAAE,EAC9Ba,EAAeb,EAAwB,IAAI,EAC3Cc,EAAoBd,EAAwB,IAAI,EAChDe,EAA8Bf,EAAS,EAAK"}