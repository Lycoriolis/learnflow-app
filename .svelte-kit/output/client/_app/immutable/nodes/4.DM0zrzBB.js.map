{"version":3,"file":"4.DM0zrzBB.js","sources":["../../../../../../src/lib/components/WelcomeBanner.svelte","../../../../../../src/lib/components/ProgressMetrics.svelte","../../../../../../src/lib/components/courses/CourseCarousel.svelte","../../../../../../src/lib/services/courses/exerciseService.ts","../../../../../../src/lib/components/courses/exercise/ExercisesSection.svelte","../../../../../../src/lib/components/RecentActivity.svelte","../../../../../../src/lib/utils/secureFetch.ts","../../../../../../src/lib/components/RecommendationsSection.svelte","../../../../../../src/lib/components/ScoreCard.svelte","../../../../../../src/routes/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  export let username = \"Hakim\";\n</script>\n\n<div class=\"bg-gradient-to-r from-indigo-500 to-indigo-600 rounded-2xl p-6 mb-8 text-white squircle\">\n  <div class=\"flex flex-col md:flex-row justify-between items-start md:items-center\">\n    <div>\n      <h2 class=\"text-2xl font-bold mb-2\">Welcome back, {username}!</h2>\n      <p class=\"opacity-90 mb-4 md:mb-0\">Continue your learning journey with these recommended courses</p>\n    </div>\n    <a \n      href=\"/courses\" \n      class=\"bg-indigo-100 text-indigo-800 px-4 py-2 rounded-lg font-medium hover:bg-indigo-200 transition\"\n    >\n      Explore Courses\n    </a>\n  </div>\n</div>","<script>\n  export let metrics = [\n    {\n      title: \"Courses in Progress\",\n      value: \"3\",\n      icon: \"fa-book\",\n      color: \"indigo\"\n    },\n    {\n      title: \"Exercises Completed\",\n      value: \"24\",\n      icon: \"fa-check-circle\",\n      color: \"green\"\n    },\n    {\n      title: \"Learning Streak\",\n      value: \"7 days\",\n      icon: \"fa-fire\",\n      color: \"yellow\"\n    }\n  ];\n</script>\n\n<div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n  {#each metrics as metric}\n    <div class=\"bg-gray-700 border border-orange-500 p-6 rounded-2xl shadow-sm squircle-sm card-hover\">\n      <div class=\"flex justify-between items-start\">\n        <div>\n          <h3 class=\"text-gray-400 text-sm font-medium\">{metric.title}</h3>\n          <p class=\"text-2xl font-bold text-gray-100 mt-1\">{metric.value}</p>\n        </div>\n        <div class=\"w-12 h-12 bg-indigo-900 rounded-full flex items-center justify-center\">\n          <i class=\"fas {metric.icon} text-indigo-300\"></i>\n        </div>\n      </div>\n    </div>\n  {/each}\n</div>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import CourseCard from './CourseCard.svelte';\n  import type { ContentNode } from '$lib/services/courses/courseService';\n  import Icon from '@iconify/svelte';\n  \n  export let courses: ContentNode[] = [];\n  export let title: string = \"Featured Courses\";\n  \n  let selectedIndex = 0;\n  \n  function next() {\n    if (selectedIndex < courses.length - 1) {\n      selectedIndex++;\n    }\n  }\n  \n  function prev() {\n    if (selectedIndex > 0) {\n      selectedIndex--;\n    }\n  }\n</script>\n\n<div class=\"course-carousel\">\n  <div class=\"flex justify-between items-center mb-4\">\n    <h2 class=\"text-xl font-bold text-gray-900 dark:text-white\">{title}</h2>\n    \n    <div class=\"flex space-x-2\">\n      <button \n        on:click={prev}\n        class=\"p-2 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n        disabled={selectedIndex === 0}\n      >\n        <Icon icon=\"mdi:chevron-left\" class=\"w-5 h-5\" />\n      </button>\n      \n      <button \n        on:click={next}\n        class=\"p-2 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n        disabled={selectedIndex === courses.length - 1}\n      >\n        <Icon icon=\"mdi:chevron-right\" class=\"w-5 h-5\" />\n      </button>\n    </div>\n  </div>\n  \n  <div class=\"carousel-container overflow-hidden\">\n    <div class=\"carousel-track flex transition-transform duration-300\" style=\"transform: translateX(-{selectedIndex * 100}%)\">\n      {#each courses as course, i}\n        <div class=\"carousel-item w-full flex-shrink-0 p-2\">\n          <CourseCard {course} isSelected={i === selectedIndex} />\n        </div>\n      {/each}\n    </div>\n  </div>\n</div>","// src/lib/services/courses/exerciseService.ts\nimport { getFirestore, collection, query, where, getDocs, Timestamp, doc, getDoc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { BaseService } from '../baseService';\nimport type { Exercise, ExerciseFilterOptions, ScoredExercise, ServiceResponse } from '../../types/shared';\n\nlet exerciseCache: Record<string, Exercise[]> = {};\n\nexport class ExerciseService extends BaseService {\n  private db = getFirestore();\n  private auth = getAuth();\n\n  async fetchExercises(options: ExerciseFilterOptions): Promise<ServiceResponse<Exercise[]>> {\n    return this.handleRequest(async () => {\n      const cacheKey = JSON.stringify(options);\n      if (exerciseCache[cacheKey]) {\n        return exerciseCache[cacheKey];\n      }\n\n      const exercisesRef = collection(this.db, 'exercises');\n      let q = query(exercisesRef);\n\n      if (options.difficulty) {\n        q = query(q, where('difficulty', '==', options.difficulty));\n      }\n\n      if (options.category) {\n        q = query(q, where('category', '==', options.category));\n      }\n\n      if (options.tags && options.tags.length > 0) {\n        q = query(q, where('tags', 'array-contains-any', options.tags));\n      }\n\n      const snapshot = await getDocs(q);\n      const exercises = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })) as Exercise[];\n\n      exerciseCache[cacheKey] = exercises;\n      return exercises;\n    });\n  }\n\n  async getAllExercises(): Promise<ServiceResponse<Exercise[]>> {\n    return this.handleRequest(async () => {\n      if (exerciseCache['root']) {\n        return exerciseCache['root'];\n      }\n\n      const response = await fetch(`/content/exercises/index.json`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch exercises: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      let result: Exercise[] = [];\n\n      if (Array.isArray(data)) {\n        result = data;\n      } else if (data.items && Array.isArray(data.items)) {\n        result = data.items;\n      } else {\n        console.warn('Unexpected content format:', data);\n        result = [];\n      }\n\n      exerciseCache['root'] = result;\n      return result;\n    });\n  }\n\n  async getExercisesByCategory(category: string): Promise<ServiceResponse<Exercise[]>> {\n    return this.handleRequest(async () => {\n      if (exerciseCache[`category-${category}`]) {\n        return exerciseCache[`category-${category}`];\n      }\n\n      const { data: exercises, error } = await this.getAllExercises();\n      if (error) {\n        throw error;\n      }\n\n      if (!exercises) {\n        return [];\n      }\n\n      const filteredExercises = exercises.filter(exercise => exercise.category === category);\n      exerciseCache[`category-${category}`] = filteredExercises;\n      return filteredExercises;\n    });\n  }\n\n  async getExerciseById(id: string): Promise<ServiceResponse<Exercise | null>> {\n    return this.handleRequest(async () => {\n      this.validateId(id);\n      \n      const response = await fetch(`/content/exercises/${id}.json`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch exercise: ${response.statusText}`);\n      }\n\n      return await response.json();\n    });\n  }\n\n  async getExerciseBySlug(slug: string): Promise<ServiceResponse<Exercise | null>> {\n    return this.handleRequest(async () => {\n      this.validateInput(slug, 'slug');\n\n      const { data: exercises, error } = await this.getAllExercises();\n      if (error) {\n        throw error;\n      }\n\n      if (!exercises) {\n        return null;\n      }\n\n      const exercise = exercises.find(exercise => exercise.id === slug);\n      if (exercise) {\n        return exercise;\n      }\n\n      const response = await fetch(`/content/exercises/by-slug/${slug}.json`);\n      if (!response.ok) {\n        return null;\n      }\n\n      return await response.json();\n    });\n  }\n\n  clearExerciseCache(): void {\n    exerciseCache = {};\n  }\n}\n\nexport const exerciseService = new ExerciseService();\n\n// Export the fetchExercises function for direct use\nexport const fetchExercises = async (options: ExerciseFilterOptions): Promise<Exercise[]> => {\n  const service = new ExerciseService();\n  const response = await service.fetchExercises(options);\n  if (response.error) {\n    throw response.error;\n  }\n  return response.data || [];\n};","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { fade } from 'svelte/transition';\n  import ExerciseCard from './ExerciseCard.svelte';\n  import type { Exercise } from '$lib/services/courses/exerciseService';\n  import { fetchExercises } from '$lib/services/courses/exerciseService';\n\n  export let categoryId: string | null = null;\n  export let limit: number | null = null;\n  export let title: string = 'Exercises';\n  export let onExerciseClick: (exercise: Exercise) => void = (exercise) => {\n    console.log('Exercise clicked:', exercise.id);\n  };\n\n  let exercises: Exercise[] = [];\n  let isLoading = true;\n  let error: string | null = null;\n  let filteredExercises: Exercise[] = [];\n  let searchQuery = '';\n  let selectedDifficulty: 'all' | 'beginner' | 'intermediate' | 'advanced' = 'all';\n  let selectedTags: string[] = [];\n  let showFilters = false;\n\n  // Update filters when exercises or filter values change\n  $: applyFilters();\n\n  function applyFilters() {\n    let result = exercises;\n\n    if (searchQuery) {\n      const lowerQuery = searchQuery.toLowerCase();\n      result = result.filter(ex => ex.title.toLowerCase().includes(lowerQuery) || ex.description?.toLowerCase().includes(lowerQuery));\n    }\n\n    if (selectedDifficulty !== 'all') {\n      result = result.filter(ex => ex.difficulty === selectedDifficulty);\n    }\n\n    if (selectedTags.length > 0) {\n      result = result.filter(ex => selectedTags.every(tag => ex.tags?.includes(tag)));\n    }\n\n    if (limit !== null) {\n      result = result.slice(0, limit);\n    }\n\n    filteredExercises = result;\n  }\n\n  async function load() {\n    isLoading = true;\n    error = null;\n    try {\n      const all = await fetchExercises(categoryId);\n      exercises = all;\n    } catch (err) {\n      console.error(err);\n      error = 'Failed to load exercises';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  onMount(load);\n\n  function handleSearchInput(e: InputEvent) {\n    searchQuery = (e.target as HTMLInputElement).value;\n  }\n\n  function handleDifficultyChange(difficulty: typeof selectedDifficulty) {\n    selectedDifficulty = difficulty;\n  }\n\n  function toggleTag(tag: string) {\n    selectedTags = selectedTags.includes(tag) ? selectedTags.filter(t => t !== tag) : [...selectedTags, tag];\n  }\n\n  function clearFilters() {\n    searchQuery = '';\n    selectedDifficulty = 'all';\n    selectedTags = [];\n  }\n\n  function toggleFilters() {\n    showFilters = !showFilters;\n  }\n</script>\n\n<section class=\"exercises-section\" in:fade={{ duration: 300 }}>\n  <div class=\"section-header\">\n    <h2 class=\"section-title\">{title}</h2>\n    <button on:click={toggleFilters} aria-expanded={showFilters} class=\"filter-toggle\">\n      <i class=\"fas fa-filter\"></i> Filters\n      {#if selectedDifficulty !== 'all' || selectedTags.length || searchQuery}\n        <span class=\"filter-badge\">{selectedTags.length + (selectedDifficulty !== 'all' ? 1 : 0) + (searchQuery ? 1 : 0)}</span>\n      {/if}\n    </button>\n  </div>\n\n  {#if isLoading}\n    <div class=\"loading-state\">Loading exercises...</div>\n  {:else if error}\n    <div class=\"error-state\">{error}</div>\n  {:else if filteredExercises.length === 0}\n    <div class=\"empty-state\">No exercises found.</div>\n  {:else}\n    <div class=\"exercises-grid\">\n      {#each filteredExercises as exercise (exercise.id)}\n        <ExerciseCard {...exercise} on:click={() => onExerciseClick(exercise)} />\n      {/each}\n    </div>\n  {/if}\n</section>\n\n<style>\n  .exercises-section {\n    margin-bottom: 3rem;\n  }\n  \n  .section-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1.5rem;\n  }\n  \n  .section-title {\n    font-size: 1.75rem;\n    font-weight: 700;\n    color: #111827;\n    margin: 0;\n  }\n  \n  .filter-toggle {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 0.5rem 0.75rem;\n    background: #f9fafb;\n    border: 1px solid #e5e7eb;\n    border-radius: 0.375rem;\n    font-size: 0.95rem;\n    color: #4b5563;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.2s ease;\n  }\n  \n  .filter-toggle:hover {\n    background: #f3f4f6;\n    border-color: #d1d5db;\n  }\n  \n  .filter-badge {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    background: #ef4444;\n    color: white;\n    width: 1.25rem;\n    height: 1.25rem;\n    font-size: 0.75rem;\n    border-radius: 50%;\n    font-weight: 600;\n  }\n  \n  .exercises-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 1.5rem;\n  }\n  \n  .loading-state {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n    padding: 3rem 0;\n    color: #6b7280;\n  }\n  \n  .error-state, .empty-state {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n    padding: 3rem 0;\n    text-align: center;\n    color: #6b7280;\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { fetchRecentActivities, type Activity } from '$lib/services/activityService';\n\n  interface DisplayActivity extends Activity {\n    title: string;\n    content: string;\n    timeAgo: string;\n    icon: string;\n    color: string;\n  }\n\n  let activities: DisplayActivity[] = [];\n\n  // Compute relative time\n  function formatTimeAgo(ts: number): string {\n    const diff = Date.now() - ts;\n    const seconds = Math.floor(diff / 1000);\n    if (seconds < 60) return `${seconds}s ago`;\n    const minutes = Math.floor(seconds / 60);\n    if (minutes < 60) return `${minutes}m ago`;\n    const hours = Math.floor(minutes / 60);\n    if (hours < 24) return `${hours}h ago`;\n    const days = Math.floor(hours / 24);\n    return `${days}d ago`;\n  }\n\n  function mapEventTypeToTitle(type: string, metadata?: any): string {\n    switch(type) {\n      case 'view_course': return `Viewed Course`;\n      case 'start_lesson': return `Started Lesson`;\n      case 'complete_lesson': return `Completed Lesson`;\n      case 'flashcard_review': return `Reviewed Flashcards`;\n      default:\n        return type.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\n    }\n  }\n\n  function eventTypeIcon(type: string): string {\n    switch(type) {\n      case 'view_course': return 'fa-book';\n      case 'start_lesson':\n      case 'complete_lesson': return 'fa-layer-group';\n      case 'flashcard_review': return 'fa-layer-group';\n      default: return 'fa-circle';\n    }\n  }\n\n  function eventTypeColor(type: string): string {\n    switch(type) {\n      case 'view_course': return 'blue';\n      case 'start_lesson': return 'yellow';\n      case 'complete_lesson': return 'green';\n      case 'flashcard_review': return 'purple';\n      default: return 'gray';\n    }\n  }\n\n  onMount(async () => {\n    const data = await fetchRecentActivities(10);\n    activities = data.map(a => ({\n      ...a,\n      title: mapEventTypeToTitle(a.eventType, a.metadata),\n      content: a.referenceId,\n      timeAgo: formatTimeAgo(a.timestampStart),\n      icon: eventTypeIcon(a.eventType),\n      color: eventTypeColor(a.eventType)\n    }));\n  });\n</script>\n\n<div>\n  <h2 class=\"text-lg font-semibold text-gray-100 mb-4\">Recent Activity</h2>\n  <div class=\"bg-gray-700 border border-orange-500 p-6 rounded-2xl shadow-sm squircle-sm\">\n    <div class=\"space-y-4\">\n      {#each activities as activity (activity.id)}\n        <div class=\"flex items-start\">\n          <div class={`w-10 h-10 bg-${activity.color}-900 rounded-full flex items-center justify-center mr-3 flex-shrink-0`}>\n            <i class={`fas ${activity.icon} text-${activity.color}-300`}></i>\n          </div>\n          <div>\n            <h3 class=\"font-medium text-gray-100\">{activity.title}</h3>\n            <p class=\"text-gray-300 text-sm\">{activity.content}</p>\n            <p class=\"text-gray-400 text-xs mt-1\">{activity.timeAgo}</p>\n          </div>\n        </div>\n      {/each}\n      {#if activities.length === 0}\n        <p class=\"text-gray-400 text-sm\">No recent activity.</p>\n      {/if}\n    </div>\n  </div>\n</div>\n","/**\n * Enhanced fetch wrapper with CSRF protection and error handling\n */\nimport { getCsrfToken, updateCsrfTokenFromResponse } from './csrf.client.js';\nimport { CSRF_HEADER } from './csrf.types.js';\nimport { get } from 'svelte/store';\nimport { isAuthenticated, user } from '../stores/authStore.js';\nimport { auth } from '../firebase.js';\n\nexport interface ApiResponse<T = any> {\n  data?: T;\n  error?: string;\n  status: number;\n}\n\n/**\n * Secure fetch wrapper that:\n * 1. Adds CSRF tokens to requests\n * 2. Updates CSRF tokens from responses\n * 3. Adds Firebase auth token for authenticated requests\n * 4. Handles errors in a consistent way\n * 5. Provides type safety for API responses\n */\nexport async function secureFetch<T = any>(\n  url: string,\n  options: RequestInit = {}\n): Promise<ApiResponse<T>> {\n  // Merge default options with provided options\n  const requestOptions: RequestInit = {\n    credentials: 'same-origin',\n    ...options,\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    }\n  };\n\n  // Add auth token if user is authenticated\n  const headers = requestOptions.headers as Record<string, string>;\n  if (get(isAuthenticated) && auth.currentUser) {\n    try {\n      const idToken = await auth.currentUser.getIdToken();\n      headers['Authorization'] = `Bearer ${idToken}`;\n    } catch (error) {\n      console.error('Failed to get auth token:', error);\n    }\n  }\n\n  // Add CSRF token to non-GET requests\n  if (options.method && options.method !== 'GET') {\n    const csrfToken = getCsrfToken();\n    \n    // If no CSRF token, try to obtain one first\n    if (!csrfToken) {\n      try {\n        const response = await fetch('/api/csrf/refresh', {\n          credentials: 'same-origin'\n        });\n        \n        const newToken = response.headers.get(CSRF_HEADER);\n        if (newToken) {\n          headers[CSRF_HEADER] = newToken;\n        } else {\n          return {\n            error: 'CSRF token required',\n            status: 401\n          };\n        }\n      } catch (error) {\n        return {\n          error: 'Failed to obtain CSRF token',\n          status: 500\n        };\n      }\n    } else {\n      headers[CSRF_HEADER] = csrfToken;\n    }\n  }\n\n  try {\n    // Make the fetch request\n    const response = await fetch(url, requestOptions);\n    \n    // Update CSRF token if present in response\n    updateCsrfTokenFromResponse(response);\n    \n    // Check for CSRF errors (401/403) and retry once if needed\n    if ((response.status === 401 || response.status === 403) && \n        response.headers.get('X-CSRF-Error') === 'true') {\n      try {\n        // Refresh token and retry\n        await fetch('/api/csrf/refresh', { credentials: 'same-origin' });\n        \n        // Retry the original request with updated token\n        const retryToken = getCsrfToken();\n        if (retryToken) {\n          (requestOptions.headers as Record<string, string>)[CSRF_HEADER] = retryToken;\n          const retryResponse = await fetch(url, requestOptions);\n          updateCsrfTokenFromResponse(retryResponse);\n          \n          // Parse and return response\n          try {\n            const data = await retryResponse.json();\n            return {\n              data,\n              status: retryResponse.status\n            };\n          } catch {\n            // If not JSON, return empty data\n            return {\n              status: retryResponse.status\n            };\n          }\n        }\n      } catch {\n        // Fall through to original error handling\n      }\n    }\n    \n    // Parse and return response\n    try {\n      const data = await response.json();\n      return {\n        data,\n        status: response.status\n      };\n    } catch {\n      // If not JSON, return empty data\n      return {\n        status: response.status\n      };\n    }\n  } catch (error) {\n    console.error('Request failed:', error);\n    return {\n      error: error instanceof Error ? error.message : 'Network request failed',\n      status: 0\n    };\n  }\n}","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { get } from 'svelte/store';\n  import type { Recommendation } from '$lib/services/recommendationService.js';\n  import { user } from '$lib/stores/authStore.js';\n  import { secureFetch } from '$lib/utils/secureFetch'; // Assuming secureFetch handles auth/CSRF\n\n  export let limit: number = 5;\n\n  let recommendations: Recommendation[] = [];\n  let loading: boolean = true;\n  let error: string | null = null;\n\n  onMount(async () => {\n    try {\n      const currentUser = get(user);\n      if (!currentUser?.uid) {\n        // Don't throw an error, just show no recommendations for guests\n        loading = false;\n        return;\n      }\n      // Fetch from the new API endpoint\n      const response = await secureFetch(`/api/recommendations?limit=${limit}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      recommendations = await response.json();\n    } catch (e:any) {\n      console.error('Error fetching recommendations', e);\n      error = e.message || 'Failed to load recommendations.';\n    } finally {\n      loading = false;\n    }\n  });\n\n  function getLink(rec: Recommendation): string {\n    switch(rec.type) {\n      case 'next_lesson':\n        // Ensure metadata and path exist\n        return rec.metadata?.path ? `/courses/${rec.metadata.path}` : '#'; \n      case 'review_flashcards':\n        return `/tools/flashcards`;\n      case 'view_courses':\n        return `/courses`;\n      case 'course':\n         // Ensure metadata and path exist\n        return rec.metadata?.path ? `/courses/${rec.metadata.path}` : '#';\n      case 'exercise':\n         // Ensure metadata and path exist\n        return rec.metadata?.path ? `/exercises/${rec.metadata.path}` : '#';\n      default:\n        console.warn(`Unknown recommendation type: ${rec.type}`);\n        return '#';\n    }\n  }\n</script>\n\n<div class=\"mb-8\">\n  <h2 class=\"text-2xl font-semibold text-gray-900 dark:text-white mb-4\">Recommended for You</h2>\n  {#if loading}\n    <p class=\"text-gray-600\">Loading recommendations...</p>\n  {:else if error}\n    <p class=\"text-red-500\">{error}</p>\n  {:else if recommendations.length === 0}\n    <p class=\"text-gray-600\">No recommendations at this time.</p>\n  {:else}\n    <div class=\"space-y-4\">\n      {#each recommendations as rec}\n        <a href={getLink(rec)} class=\"block bg-white dark:bg-gray-800 rounded-lg p-4 shadow hover:shadow-md transition flex items-center\">\n          <div class=\"flex-1\">\n            <h3 class=\"font-medium text-gray-900 dark:text-white\">{rec.title}</h3>\n            <p class=\"text-gray-600 dark:text-gray-300 text-sm\">{rec.description}</p>\n          </div>\n          <i class=\"fas fa-chevron-right text-gray-400\"></i>\n        </a>\n      {/each}\n    </div>\n  {/if}\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  let score: number | null = null;\n  let loading = true;\n  let error: string | null = null;\n\n  onMount(async () => {\n    try {\n      const res = await fetch('/api/score');\n      if (!res.ok) throw new Error('Failed to fetch score');\n      const data = await res.json();\n      score = data.score;\n    } catch (e:any) {\n      console.error(e);\n      error = e.message;\n    } finally {\n      loading = false;\n    }\n  });\n\n  function starArray(n: number) {\n    const full = Math.floor(n);\n    const half = n - full >= 0.5;\n    return [...Array(5)].map((_, i) =>\n      i < full ? 'full' : i === full && half ? 'half' : 'empty'\n    );\n  }\n</script>\n\n<div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow mb-8\">\n  <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">Score Utilisateur</h2>\n  {#if loading}\n    <p class=\"text-gray-600\">Loading...</p>\n  {:else if error}\n    <p class=\"text-red-500\">{error}</p>\n  {:else if score !== null}\n    <div class=\"flex items-center\">\n      <div class=\"flex mr-3\">\n        {#each starArray(score) as type}\n          {#if type === 'full'}<i class=\"fas fa-star text-yellow-400\"></i>\n          {:else if type === 'half'}<i class=\"fas fa-star-half-alt text-yellow-400\"></i>\n          {:else}<i class=\"far fa-star text-gray-300 dark:text-gray-600\"></i>{/if}\n        {/each}\n      </div>\n      <span class=\"text-gray-900 dark:text-gray-100 font-medium\">{score}/5</span>\n    </div>\n  {/if}\n</div>","<script lang=\"ts\">\n  import { onMount, onDestroy } from 'svelte';\n  import WelcomeBanner from '$lib/components/WelcomeBanner.svelte';\n  import ProgressMetrics from '$lib/components/ProgressMetrics.svelte';\n  import CourseCarousel from '$lib/components/courses/CourseCarousel.svelte';\n  import ExercisesSection from '$lib/components/courses/exercise/ExercisesSection.svelte';\n  import RecentActivity from '$lib/components/RecentActivity.svelte';\n  import { isAuthenticated, user, loading as authLoading } from '$lib/stores/authStore.js';\n  import GeneralWelcome from '$lib/components/GeneralWelcome.svelte';\n  import { userProfile, userProfileLoading } from '$lib/stores/userProfileStore.js';\n  import { focusSessions, todos } from '$lib/stores/pipStores';\n  import FocusTimeChart from '$lib/components/FocusTimeChart.svelte';\n  import { logStart, logEnd } from '$lib/services/activityService';\n  import RecommendationsSection from '$lib/components/RecommendationsSection.svelte';\n  import ScoreCard from '$lib/components/ScoreCard.svelte';\n  import type { PageData } from './$types';\n\n  export let data: PageData;\n  $: suggestedCourses = data.suggestedCourses || [];\n\n  type Metric = { title: string; value: string; icon: string; color: string };\n  let metrics: Metric[] = [];\n  let dashboardEventId: string | null = null;\n\n  onMount(async () => {\n    dashboardEventId = await logStart('view_dashboard', 'dashboard');\n    const updateMetrics = () => {\n      if ($isAuthenticated && $userProfile) {\n        const enrollments: any[] = $userProfile.preferences?.enrollments || [];\n        const inProgress = enrollments.filter((e: any) => e.progress > 0 && e.progress < 100).length;\n        const completed = enrollments.filter((e: any) => e.progress === 100).length;\n        const sessions = $focusSessions;\n        const sessionCount = sessions.length;\n        const totalFocus = sessions.reduce((sum: number, s: any) => sum + (s.duration || 0) / 60, 0).toFixed(0);\n        const tasksDone = $todos.filter((t: any) => t.completed).length;\n        metrics = [\n          { title: 'Courses In Progress', value: String(inProgress), icon: 'fa-book', color: 'indigo' },\n          { title: 'Courses Completed', value: String(completed), icon: 'fa-award', color: 'green' },\n          { title: 'Focus Sessions', value: String(sessionCount), icon: 'fa-stopwatch', color: 'yellow' },\n          { title: 'Total Focus Time (min)', value: totalFocus, icon: 'fa-clock', color: 'purple' },\n          { title: 'Tasks Completed', value: String(tasksDone), icon: 'fa-list-check', color: 'blue' }\n        ];\n      }\n    };\n\n    updateMetrics();\n\n    const unsubscribeUserProfile = userProfile.subscribe(updateMetrics);\n    const unsubscribeFocusSessions = focusSessions.subscribe(updateMetrics);\n    const unsubscribeTodos = todos.subscribe(updateMetrics);\n\n    return () => {\n      unsubscribeUserProfile();\n      unsubscribeFocusSessions();\n      unsubscribeTodos();\n    };\n  });\n\n  onDestroy(() => {\n    if (dashboardEventId) {\n      logEnd(dashboardEventId);\n    }\n  });\n</script>\n\n<svelte:head>\n  <title>LearnFlow | Your Dashboard</title>\n  <meta name=\"description\" content=\"Your personalized learning dashboard on LearnFlow.\" />\n</svelte:head>\n\n<div class=\"max-w-7xl mx-auto px-4 py-6 sm:px-6 lg:px-8\">\n  {#if $authLoading || $userProfileLoading}\n    <div class=\"flex justify-center items-center min-h-[60vh]\"><i class=\"fas fa-spinner fa-spin text-4xl text-indigo-500\"></i></div>\n  {:else if $isAuthenticated && $userProfile}\n    <WelcomeBanner username={$user ? ($user.displayName ?? $user.email ?? '') : ''} />\n\n    <ProgressMetrics {metrics} />\n\n    <div class=\"mb-8\">\n      <h2 class=\"text-2xl font-semibold text-gray-900 dark:text-white mb-4\">Focus Time Log</h2>\n      <FocusTimeChart sessions={$focusSessions} timeUnit=\"day\" />\n    </div>\n\n    <div class=\"mb-8\">\n      <h2 class=\"text-2xl font-semibold text-gray-900 dark:text-white mb-4\">Quick Actions</h2>\n      <div class=\"flex flex-col gap-4 w-full\">\n        <CourseCarousel title=\"Suggested Courses\" items={suggestedCourses} />\n        <ExercisesSection limit={5} />\n        <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow min-h-[140px] flex flex-col items-center justify-center text-center transition hover:shadow-xl hover:ring-2 hover:ring-indigo-300 w-full\">\n          <h3 class=\"text-lg font-semibold mb-2\">Your Tasks</h3>\n          <p class=\"text-gray-600 dark:text-gray-300\">Manage your study tasks.</p>\n        </div>\n        <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow min-h-[140px] flex flex-col items-center justify-center text-center transition hover:shadow-xl hover:ring-2 hover:ring-indigo-300 w-full\">\n          <h3 class=\"text-lg font-semibold mb-2\">Your Notes</h3>\n          <p class=\"text-gray-600 dark:text-gray-300\">Jot down quick thoughts.</p>\n        </div>\n      </div>\n    </div>\n\n    <ScoreCard />\n\n    <RecommendationsSection limit={5} />\n\n    <RecentActivity />\n\n  {:else}\n    <GeneralWelcome />\n  {/if}\n</div>\n"],"names":["username","_a","metrics","$.prop","$$props","$.each","div","metric","$.set_text","text","$.get","text_1","$.set_class","i","courses","title","selectedIndex","next","prev","div_4","course","expression","$.derived_safe_equal","button","button_1","$.set_style","exerciseCache","ExerciseService","BaseService","__publicField","getFirestore","getAuth","options","__async","cacheKey","exercisesRef","collection","q","query","where","exercises","getDocs","doc","__spreadValues","response","data","result","category","error","filteredExercises","exercise","id","slug","fetchExercises","categoryId","limit","onExerciseClick","isLoading","$.mutable_source","searchQuery","selectedDifficulty","selectedTags","showFilters","applyFilters","lowerQuery","ex","tag","$.set","load","err","onMount","toggleFilters","$.template_effect","$$render","consequent","consequent_3","alternate_2","consequent_2","alternate_1","consequent_1","alternate","$.transition","section","fade","activities","formatTimeAgo","ts","diff","seconds","minutes","hours","mapEventTypeToTitle","type","metadata","c","eventTypeIcon","eventTypeColor","fetchRecentActivities","a","__spreadProps","node","activity","text_2","secureFetch","_0","url","requestOptions","headers","get","isAuthenticated","auth","idToken","csrfToken","getCsrfToken","CSRF_HEADER","newToken","updateCsrfTokenFromResponse","retryToken","retryResponse","e","recommendations","loading","currentUser","user","getLink","rec","_b","_c","div_1","score","res","starArray","n","full","half","_","$.index","$$anchor","alternate_3","consequent_4","dashboardEventId","logStart","updateMetrics","$isAuthenticated","$userProfile","enrollments","inProgress","completed","sessions","$focusSessions","sessionCount","totalFocus","sum","s","tasksDone","$todos","t","unsubscribeUserProfile","userProfile","unsubscribeFocusSessions","focusSessions","unsubscribeTodos","todos","onDestroy","logEnd","suggestedCourses","$user","$authLoading","$userProfileLoading"],"mappings":"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"}