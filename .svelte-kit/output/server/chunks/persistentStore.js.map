{"version":3,"file":"persistentStore.js","sources":["../../../../src/lib/stores/persistentStore.js"],"sourcesContent":["import { writable } from 'svelte/store';\nimport { browser } from '$app/environment'; // Ensure code only runs in browser\n\n/**\n * Creates a Svelte writable store that automatically persists to localStorage.\n * @template T\n * @param {string} key The localStorage key.\n * @param {T} initialValue The initial value if nothing is in localStorage.\n * @returns {import('svelte/store').Writable<T>}\n */\nexport function persistentStore(key, initialValue) {\n    let initial = initialValue;\n    if (browser) { // Check if running in the browser context\n        const storedValue = localStorage.getItem(key);\n        if (storedValue !== null) {\n            try {\n                initial = JSON.parse(storedValue);\n            } catch (e) {\n                console.error(`Error parsing localStorage key \"${key}\":`, e);\n                localStorage.removeItem(key); // Remove corrupted data\n                initial = initialValue;\n            }\n        }\n    }\n\n    const store = writable(initial);\n\n    if (browser) {\n        store.subscribe(value => {\n            // Prevent writing undefined to localStorage\n            if (value !== undefined) {\n              localStorage.setItem(key, JSON.stringify(value));\n            }\n        });\n    }\n\n    return store;\n}\n\n// Track completed exercises (array of exercise IDs)\nexport const completedExercises = persistentStore('completedExercises', []);\n// Track bookmarked exercises with reason and date\nexport const bookmarks = persistentStore('bookmarkedExercises', []);"],"names":[],"mappings":";AAUO,SAAS,gBAAgB,KAAK,cAAc;AAC/C,MAAI,UAAU;AAcd,QAAM,QAAQ,SAAS,OAAO;AAW9B,SAAO;AACX;"}