{"version":3,"file":"userService.server.js","sources":["../../../../src/lib/services/userService.server.ts"],"sourcesContent":["import pkg from 'pg';\nconst { Pool } = pkg;\nimport { env } from '$env/dynamic/private';\n\nexport const pool = new Pool({\n  connectionString: env.DATABASE_URL\n});\n\nexport interface UserProfile {\n  uid: string;\n  email: string;\n  displayName?: string;\n  createdAt: number;\n  preferences?: Record<string, any>;\n}\n\nconst ADMIN_EMAILS = (env.VITE_ADMIN_EMAILS || '').split(',').map(email => email.trim());\n\n/**\n * Verifies if a user has admin privileges based on their email\n */\nexport async function verifyUserIsAdmin(email: string | null | undefined): Promise<boolean> {\n    if (!email) return false;\n    return ADMIN_EMAILS.includes(email);\n}\n\n/**\n * Fetches all user profiles from the database (admin only)\n */\nexport async function getAllUsers(): Promise<UserProfile[]> {\n    try {\n        const result = await pool.query('SELECT * FROM users');\n        return result.rows;\n    } catch (error) {\n        console.error('Error fetching users:', error);\n        throw error;\n    }\n}\n"],"names":["env"],"mappings":";;AACA,MAAM,EAAE,KAAS,IAAA;AAGJ,MAAA,OAAO,IAAI,KAAK;AAAA,EAC3B,kBAAkBA,YAAI;AACxB,CAAC;AAAA,CAUqBA,YAAI,qBAAqB,IAAI,MAAM,GAAG,EAAE,IAAI,CAAA,UAAS,MAAM,KAAM,CAAA;AAavF,eAAsB,cAAsC;AACpD,MAAA;AACA,UAAM,SAAS,MAAM,KAAK,MAAM,qBAAqB;AACrD,WAAO,OAAO;AAAA,WACT,OAAO;AACJ,YAAA,MAAM,yBAAyB,KAAK;AACtC,UAAA;AAAA,EAAA;AAEd;"}