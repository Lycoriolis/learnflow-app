{"version":3,"file":"userProfileStore.js","sources":["../../../../src/lib/stores/userProfileStore.ts"],"sourcesContent":["import { writable } from 'svelte/store';\nimport type { User } from 'firebase/auth';\nimport type { UserProfile } from '../services/userService.js';\nimport { getUserProfile, createUserProfile, updateUserProfile as updateUserProfileService } from '../services/userService.js';\n\nexport const userProfile = writable<UserProfile | null>(null);\nexport const userProfileLoading = writable<boolean>(false);\nexport const userProfileError = writable<string | null>(null);\n\n/**\n * Load or create the user profile for the given UID and email/displayName.\n */\nexport async function loadUserProfile(uid: string, email: string, displayName?: string): Promise<void> {\n  userProfileLoading.set(true);\n  userProfileError.set(null);\n\n  try {\n    let profile = await getUserProfile(uid);\n    if (!profile) {\n      // create new profile\n      const now = Date.now();\n      profile = {\n        uid,\n        email,\n        displayName,\n        createdAt: now,\n        preferences: {\n          enrollments: [],\n          focusSessions: [],\n          tasks: [],\n          notes: ''\n        }\n      };\n      await createUserProfile(profile);\n    }\n    userProfile.set(profile);\n  } catch (err: any) {\n    console.error('Error loading user profile:', err);\n    userProfileError.set(err.message);\n    userProfile.set(null);\n  } finally {\n    userProfileLoading.set(false);\n  }\n}\n\nexport const updateUserProfile = updateUserProfileService;"],"names":[],"mappings":";AAKa,MAAA,cAAc,SAA6B,IAAI;AAC/C,MAAA,qBAAqB,SAAkB,KAAK;"}