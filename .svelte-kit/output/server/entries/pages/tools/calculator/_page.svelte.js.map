{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../src/routes/tools/calculator/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { calcDisplay, calcCurrentInput, calcOperator, calcPreviousValue, calcWaitingForSecondOperand } from '$lib/stores/pipStores';\n  import { onMount, onDestroy } from 'svelte';\n\n  let scientificMode = false;\n  let showHistory = false;\n  let calculationHistory: string[] = [];\n  let angleMode: 'deg' | 'rad' = 'deg';\n\n  onMount(() => {\n    window.addEventListener('keydown', handleKeydown);\n  });\n\n  onDestroy(() => {\n    window.removeEventListener('keydown', handleKeydown);\n  });\n\n  function inputDigit(digit: string) {\n    if ($calcWaitingForSecondOperand) {\n      calcDisplay.set(digit);\n      calcWaitingForSecondOperand.set(false);\n    } else {\n      calcDisplay.set($calcDisplay === '0' ? digit : $calcDisplay + digit);\n    }\n    calcCurrentInput.set($calcDisplay);\n  }\n\n  function inputDecimal() {\n    if ($calcWaitingForSecondOperand) {\n      calcDisplay.set('0.');\n      calcWaitingForSecondOperand.set(false);\n      return;\n    }\n\n    if (!$calcDisplay.includes('.')) {\n      calcDisplay.set($calcDisplay + '.');\n      calcCurrentInput.set($calcDisplay);\n    }\n  }\n\n  function clearAll() {\n    calcDisplay.set('0');\n    calcCurrentInput.set('');\n    calcOperator.set(null);\n    calcPreviousValue.set(null);\n    calcWaitingForSecondOperand.set(false);\n  }\n\n  function handleOperator(nextOperator: string) {\n    const inputValue = parseFloat($calcDisplay);\n\n    if ($calcPreviousValue === null) {\n      calcPreviousValue.set(inputValue);\n    } else if ($calcOperator) {\n      const result = performCalculation();\n      calcDisplay.set(String(result));\n      calcPreviousValue.set(result);\n    }\n\n    calcWaitingForSecondOperand.set(true);\n    calcOperator.set(nextOperator);\n  }\n\n  function performCalculation(): number {\n    const prevValue = $calcPreviousValue;\n    const currentValue = parseFloat($calcDisplay);\n\n    if (prevValue === null) return currentValue;\n\n    let result: number;\n    switch ($calcOperator) {\n      case '+':\n        result = prevValue + currentValue;\n        break;\n      case '-':\n        result = prevValue - currentValue;\n        break;\n      case '*':\n        result = prevValue * currentValue;\n        break;\n      case '/':\n        result = prevValue / currentValue;\n        break;\n      case 'pow':\n        result = Math.pow(prevValue, currentValue);\n        break;\n      default:\n        return currentValue;\n    }\n\n    // Add to history\n    calculationHistory = [...calculationHistory, `${prevValue} ${$calcOperator} ${currentValue} = ${result}`];\n    return result;\n  }\n\n  function handleScientificFunction(fn: string) {\n    const currentValue = parseFloat($calcDisplay);\n    let result: number;\n\n    switch (fn) {\n      case 'sin':\n        result = angleMode === 'deg' ? \n          Math.sin(currentValue * Math.PI / 180) : \n          Math.sin(currentValue);\n        break;\n      case 'cos':\n        result = angleMode === 'deg' ? \n          Math.cos(currentValue * Math.PI / 180) : \n          Math.cos(currentValue);\n        break;\n      case 'tan':\n        result = angleMode === 'deg' ? \n          Math.tan(currentValue * Math.PI / 180) : \n          Math.tan(currentValue);\n        break;\n      case 'sqrt':\n        result = Math.sqrt(currentValue);\n        break;\n      case 'log':\n        result = Math.log10(currentValue);\n        break;\n      case 'ln':\n        result = Math.log(currentValue);\n        break;\n      case 'exp':\n        result = Math.exp(currentValue);\n        break;\n      case 'pi':\n        result = Math.PI;\n        break;\n      case 'e':\n        result = Math.E;\n        break;\n      default:\n        return;\n    }\n\n    calcDisplay.set(String(result));\n    calcCurrentInput.set($calcDisplay);\n    calculationHistory = [...calculationHistory, `${fn}(${currentValue}) = ${result}`];\n  }\n\n  function copyToClipboard() {\n    navigator.clipboard.writeText($calcDisplay);\n  }\n\n  function clearHistory() {\n    calculationHistory = [];\n  }\n\n  // Handle keyboard input\n  function handleKeydown(event: KeyboardEvent) {\n    const key = event.key;\n    \n    if (/[0-9]/.test(key)) {\n      inputDigit(key);\n    } else if (key === '.') {\n      inputDecimal();\n    } else if (['+', '-', '*', '/'].includes(key)) {\n      handleOperator(key);\n    } else if (key === 'Enter' || key === '=') {\n      handleOperator('=');\n    } else if (key === 'Escape') {\n      clearAll();\n    } else if (key === 'Backspace') {\n      calcDisplay.set($calcDisplay.slice(0, -1) || '0');\n    }\n  }\n</script>\n\n<svelte:head>\n  <title>Scientific Calculator | LearnFlow</title>\n</svelte:head>\n\n<div class=\"max-w-2xl mx-auto px-4 py-10\">\n  <div class=\"flex justify-between items-start mb-8\">\n    <div>\n      <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white mb-2 flex items-center\">\n        <i class=\"fas fa-calculator mr-3 text-purple-500\"></i> Scientific Calculator\n      </h1>\n      <p class=\"text-gray-600 dark:text-gray-400\">Advanced calculator with scientific functions</p>\n    </div>\n    <div class=\"flex gap-2\">\n      <button \n        class=\"text-sm px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition\"\n        on:click={() => { showHistory = !showHistory; }}\n      >\n        <i class=\"fas fa-history mr-2\"></i> History\n      </button>\n      <button \n        class=\"text-sm px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition\"\n        on:click={() => { scientificMode = !scientificMode; }}\n      >\n        {scientificMode ? 'Basic' : 'Scientific'}\n      </button>\n    </div>\n  </div>\n\n  <div class=\"grid grid-cols-1 {showHistory ? 'lg:grid-cols-3' : ''} gap-8\">\n    <div class=\"lg:col-span-2\">\n      <div class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg\">\n        <!-- Display -->\n        <div class=\"mb-4 relative\">\n          <input\n            type=\"text\"\n            class=\"w-full text-right px-4 py-3 text-2xl font-mono bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 rounded-lg\"\n            bind:value={$calcDisplay}\n            readonly\n          >\n          <button\n            class=\"absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300\"\n            on:click={() => { copyToClipboard(); }}\n            title=\"Copy to clipboard\"\n          >\n            <i class=\"fas fa-copy\"></i>\n          </button>\n        </div>\n\n        {#if scientificMode}\n          <!-- Scientific Functions -->\n          <div class=\"grid grid-cols-4 gap-2 mb-4\">\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { handleScientificFunction('sin'); }}\n            >sin</button>\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { handleScientificFunction('cos'); }}\n            >cos</button>\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { handleScientificFunction('tan'); }}\n            >tan</button>\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { angleMode = angleMode === 'deg' ? 'rad' : 'deg'; }}\n            >{angleMode}</button>\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { handleScientificFunction('log'); }}\n            >log</button>\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { handleScientificFunction('ln'); }}\n            >ln</button>\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { handleScientificFunction('exp'); }}\n            >exp</button>\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { handleScientificFunction('sqrt'); }}\n            >√</button>\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { handleOperator('pow'); }}\n            >x^y</button>\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { handleScientificFunction('pi'); }}\n            >π</button>\n            <button \n              class=\"p-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n              on:click={() => { handleScientificFunction('e'); }}\n            >e</button>\n          </div>\n        {/if}\n\n        <!-- Basic Calculator Grid -->\n        <div class=\"grid grid-cols-4 gap-2\">\n          <button\n            class=\"p-4 bg-red-600 text-white rounded hover:bg-red-700 transition\"\n            on:click={() => { clearAll(); }}\n          >AC</button>\n          <button\n            class=\"p-4 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n            on:click={() => { calcDisplay.set(String(-parseFloat($calcDisplay))); }}\n          >±</button>\n          <button\n            class=\"p-4 bg-gray-600 text-white rounded hover:bg-gray-700 transition\"\n            on:click={() => { calcDisplay.set(String(parseFloat($calcDisplay) / 100)); }}\n          >%</button>\n          <button\n            class=\"p-4 bg-purple-600 text-white rounded hover:bg-purple-700 transition\"\n            on:click={() => { handleOperator('/'); }}\n          >÷</button>\n          \n          {#each [7, 8, 9, '*', 4, 5, 6, '-', 1, 2, 3, '+', 0, '.', '='] as key}\n            {@const isOperator = ['*', '-', '+', '='].includes(String(key))}\n            {@const isZero = key === 0}\n            <button\n              class=\"p-4 {isOperator ? 'bg-purple-600 hover:bg-purple-700' : 'bg-gray-600 hover:bg-gray-700'} \n                     text-white rounded transition {isZero ? 'col-span-2' : ''}\"\n              on:click={() => {\n                if (typeof key === 'number' || key === '.') {\n                  key === '.' ? inputDecimal() : inputDigit(String(key));\n                } else {\n                  handleOperator(key);\n                }\n              }}\n            >\n              {#if key === '*'}<i class=\"fas fa-times\"></i>\n              {:else if key === '-'}<i class=\"fas fa-minus\"></i>\n              {:else if key === '+'}<i class=\"fas fa-plus\"></i>\n              {:else if key === '='}<i class=\"fas fa-equals\"></i>\n              {:else}{key}{/if}\n            </button>\n          {/each}\n        </div>\n      </div>\n    </div>\n\n    {#if showHistory}\n      <div class=\"lg:col-span-1\">\n        <div class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-lg font-medium text-gray-900 dark:text-white\">History</h3>\n            <button\n              class=\"text-sm text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n              on:click={() => { clearHistory(); }}\n            >\n              Clear\n            </button>\n          </div>\n          {#if calculationHistory.length === 0}\n            <p class=\"text-gray-500 dark:text-gray-400 text-sm\">No calculations yet</p>\n          {:else}\n            <div class=\"space-y-2\">\n              {#each calculationHistory as calc}\n                <div class=\"text-sm text-gray-600 dark:text-gray-300 font-mono\">{calc}</div>\n              {/each}\n            </div>\n          {/if}\n        </div>\n      </div>\n    {/if}\n  </div>\n</div>"],"names":["$.store_get","$.attr"],"mappings":"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"}