{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../src/routes/tools/tasks/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { todos, type TodoItem } from '$lib/stores/pipStores';\n  import { onMount } from 'svelte';\n  import { fade, fly, scale, slide } from 'svelte/transition';\n  import { quintOut, cubicOut, bounceOut, elasticOut } from 'svelte/easing';\n\n  let selectedId: string | null = null;\n  let editing = false;\n  let editTask: TodoItem | null = null;\n  let newTask: Partial<TodoItem> = { text: '', description: '', deadline: '', emergency: 3, tag: '' };\n  let showAddPanel = false;\n  let isMobile = false;\n\n  // Filtering state\n  let filterTag = '';\n  let filterEmergency = 'all';\n  let searchTerm = '';\n  let sortBy = 'createdAt'; // Options: createdAt, emergency, deadline\n  let sortDir = 'desc'; // Options: asc, desc\n\n  // Drag-and-drop state\n  let draggingId: string | null = null;\n  let dragOverId: string | null = null;\n\n  onMount(() => {\n    const checkMobile = () => {\n      isMobile = window.innerWidth < 768;\n    };\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  });\n\n  // Task data processing\n  $: allTodos = $todos;\n  $: selectedTask = allTodos.find(t => t.id === selectedId) || null;\n  $: filteredTodos = allTodos.filter(task => {\n    if (filterTag && task.tag !== filterTag) return false;\n    if (filterEmergency !== 'all' && String(task.emergency) !== filterEmergency) return false;\n    if (searchTerm && !task.text.toLowerCase().includes(searchTerm.toLowerCase())) return false;\n    return true;\n  }).sort((a, b) => {\n    let aVal = sortBy === 'deadline' ? (a.deadline ? new Date(a.deadline).getTime() : Infinity) :\n              sortBy === 'emergency' ? a.emergency : \n              a.createdAt;\n    \n    let bVal = sortBy === 'deadline' ? (b.deadline ? new Date(b.deadline).getTime() : Infinity) :\n              sortBy === 'emergency' ? b.emergency : \n              b.createdAt;\n              \n    return sortDir === 'asc' ? aVal - bVal : bVal - aVal;\n  });\n\n  $: uniqueTags = [...new Set(allTodos.map(t => t.tag).filter(Boolean))];\n  $: completedCount = allTodos.filter(t => t.completed).length;\n  $: totalCount = allTodos.length;\n  $: progressPercentage = totalCount > 0 ? Math.round((completedCount / totalCount) * 100) : 0;\n\n  // Task functions\n  function selectTask(id: string) {\n    selectedId = id;\n    editing = false;\n    editTask = null;\n    if (isMobile) {\n      showAddPanel = false;\n    }\n  }\n\n  function startEdit(task: TodoItem) {\n    editing = true;\n    editTask = { ...task };\n  }\n\n  function saveEdit() {\n    if (!editTask) return;\n    todos.update(ts => ts.map(t => t.id === editTask!.id ? { ...editTask } : t));\n    editing = false;\n    editTask = null;\n  }\n\n  function toggleTaskComplete(task: TodoItem) {\n    todos.update(ts => ts.map(t => t.id === task.id ? { ...t, completed: !t.completed } : t));\n  }\n\n  function addTask() {\n    if (!newTask.text?.trim()) return;\n    const task: TodoItem = {\n      id: crypto.randomUUID(),\n      text: newTask.text!,\n      completed: false,\n      createdAt: Date.now(),\n      description: newTask.description || '',\n      deadline: newTask.deadline || '',\n      emergency: newTask.emergency || 3,\n      tag: newTask.tag || ''\n    };\n    todos.update(ts => [...ts, task]);\n    newTask = { text: '', description: '', deadline: '', emergency: 3, tag: '' };\n    selectedId = task.id;\n    showAddPanel = false;\n  }\n\n  function deleteTask(id: string) {\n    todos.update(ts => ts.filter(t => t.id !== id));\n    if (selectedId === id) selectedId = null;\n  }\n\n  function clearCompletedTasks() {\n    todos.update(ts => ts.filter(t => !t.completed));\n    if (selectedTask?.completed) selectedId = null;\n  }\n\n  // Drag and drop functions\n  function handleDragStart(id: string) {\n    draggingId = id;\n  }\n\n  function handleDragOver(id: string) {\n    dragOverId = id;\n  }\n\n  function handleDrop() {\n    if (draggingId && dragOverId && draggingId !== dragOverId) {\n      const fromIdx = allTodos.findIndex(t => t.id === draggingId);\n      const toIdx = allTodos.findIndex(t => t.id === dragOverId);\n      if (fromIdx !== -1 && toIdx !== -1) {\n        const reordered = [...allTodos];\n        const [moved] = reordered.splice(fromIdx, 1);\n        reordered.splice(toIdx, 0, moved);\n        todos.set(reordered);\n      }\n    }\n    draggingId = null;\n    dragOverId = null;\n  }\n\n  function handleDragEnd() {\n    draggingId = null;\n    dragOverId = null;\n  }\n\n  function handleTaskKeydown(event: KeyboardEvent, taskId: string) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      selectTask(taskId);\n    }\n  }\n\n  // UI helper functions\n  function getEmergencyColor(level: number) {\n    switch(Number(level)) {\n      case 1: return 'bg-green-50 dark:bg-green-950 text-green-600 dark:text-green-300 border-green-200 dark:border-green-800';\n      case 2: return 'bg-blue-50 dark:bg-blue-950 text-blue-600 dark:text-blue-300 border-blue-200 dark:border-blue-800';\n      case 3: return 'bg-yellow-50 dark:bg-yellow-950 text-yellow-600 dark:text-yellow-300 border-yellow-200 dark:border-yellow-800';\n      case 4: return 'bg-orange-50 dark:bg-orange-950 text-orange-600 dark:text-orange-300 border-orange-200 dark:border-orange-800';\n      case 5: return 'bg-red-50 dark:bg-red-950 text-red-600 dark:text-red-300 border-red-200 dark:border-red-800';\n      default: return 'bg-gray-50 dark:bg-gray-800 text-gray-600 dark:text-gray-300 border-gray-200 dark:border-gray-700';\n    }\n  }\n\n  function getEmergencyLabel(level: number) {\n    switch(Number(level)) {\n      case 1: return 'Low';\n      case 2: return 'Medium-Low';\n      case 3: return 'Medium';\n      case 4: return 'High';\n      case 5: return 'Critical';\n      default: return 'None';\n    }\n  }\n\n  function getTaskStatusClass(task: TodoItem) {\n    if (task.completed) {\n      return 'opacity-75';\n    }\n    \n    if (task.deadline) {\n      const deadlineDate = new Date(task.deadline);\n      const today = new Date();\n      const timeDiff = deadlineDate.getTime() - today.getTime();\n      const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));\n      \n      if (daysDiff < 0) {\n        return 'overdue';\n      } else if (daysDiff <= 1) {\n        return 'due-soon';\n      }\n    }\n    \n    return '';\n  }\n\n  function formatDate(dateStr: string) {\n    if (!dateStr) return '';\n    const date = new Date(dateStr);\n    return new Intl.DateTimeFormat('en-US', { \n      month: 'short', \n      day: 'numeric',\n      year: 'numeric'\n    }).format(date);\n  }\n\n  function formatRelativeDate(dateStr: string) {\n    if (!dateStr) return '';\n    \n    const date = new Date(dateStr);\n    const now = new Date();\n    const diffTime = date.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays < 0) {\n      return `${Math.abs(diffDays)} day${Math.abs(diffDays) !== 1 ? 's' : ''} overdue`;\n    } else if (diffDays === 0) {\n      return 'Due today';\n    } else if (diffDays === 1) {\n      return 'Due tomorrow';\n    } else if (diffDays < 7) {\n      return `Due in ${diffDays} days`;\n    } else {\n      return formatDate(dateStr);\n    }\n  }\n</script>\n\n<svelte:head>\n  <title>Tasks | LearnFlow</title>\n</svelte:head>\n\n<div class=\"flex flex-col md:flex-row h-[85vh] max-w-7xl mx-auto bg-white dark:bg-gray-900 rounded-2xl shadow-xl overflow-hidden mt-6 border border-gray-200 dark:border-gray-800\">\n  <!-- Left: Task List -->\n  <div class=\"w-full md:w-2/5 lg:w-1/3 border-r border-gray-200 dark:border-gray-800 bg-gradient-to-br from-indigo-50/80 via-purple-50/50 dark:from-indigo-950/30 dark:via-purple-950/20 to-white dark:to-gray-900 overflow-y-auto relative {isMobile && selectedTask && !showAddPanel ? 'hidden' : ''}\">\n    <div class=\"sticky top-0 z-10 bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm border-b border-gray-100 dark:border-gray-800 p-5 space-y-5\">\n      <div class=\"flex items-center justify-between\">\n        <h2 class=\"text-xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-purple-600 dark:from-indigo-400 dark:to-purple-400 flex items-center\">\n          <i class=\"fas fa-tasks mr-3\"></i> My Tasks\n        </h2>\n        <button \n          class=\"h-10 w-10 flex items-center justify-center rounded-full bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white shadow-md transition transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-indigo-400 focus:ring-opacity-50\"\n          on:click={() => showAddPanel = !showAddPanel}\n          aria-label={showAddPanel ? \"Close add task panel\" : \"Open add task panel\"}\n        >\n          <i class=\"fas {showAddPanel ? 'fa-times' : 'fa-plus'}\"></i>\n        </button>\n      </div>\n      \n      <!-- Progress bar -->\n      <div class=\"w-full h-4 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n        <div class=\"bg-gradient-to-r from-indigo-500 to-purple-500 h-full rounded-full relative overflow-hidden\" \n             style=\"width: {progressPercentage}%\"\n             transition:scale={{ duration: 300, easing: cubicOut }}\n             >\n          <div class=\"absolute inset-0 opacity-30 bg-striped\"></div>\n        </div>\n      </div>\n      <div class=\"text-xs text-gray-500 dark:text-gray-400 flex justify-between\">\n        <span>{completedCount} of {totalCount} tasks completed</span>\n        <span class=\"font-semibold\">{progressPercentage}%</span>\n      </div>\n      \n      <!-- Search and filter bar -->\n      <div class=\"space-y-3\">\n        <div class=\"relative\">\n          <i class=\"fas fa-search absolute left-3.5 top-3 text-gray-400 dark:text-gray-500\"></i>\n          <input \n            class=\"w-full pl-10 pr-4 py-2.5 rounded-xl border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white shadow-sm focus:ring-2 focus:ring-indigo-400 focus:border-indigo-400 transition text-sm\" \n            placeholder=\"Search tasks...\" \n            bind:value={searchTerm}\n          />\n        </div>\n        \n        <div class=\"flex flex-wrap gap-2\">\n          <select \n            class=\"text-xs px-3 py-1.5 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 focus:ring-2 focus:ring-indigo-400 focus:border-indigo-400 cursor-pointer\"\n            bind:value={filterEmergency}\n          >\n            <option value=\"all\">All Priorities</option>\n            <option value=\"1\">Low</option>\n            <option value=\"2\">Medium-Low</option>\n            <option value=\"3\">Medium</option>\n            <option value=\"4\">High</option>\n            <option value=\"5\">Critical</option>\n          </select>\n          \n          <select \n            class=\"text-xs px-3 py-1.5 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 focus:ring-2 focus:ring-indigo-400 focus:border-indigo-400 cursor-pointer\"\n            bind:value={filterTag}\n          >\n            <option value=\"\">All Tags</option>\n            {#each uniqueTags as tag}\n              <option value={tag}>{tag}</option>\n            {/each}\n          </select>\n          \n          <div class=\"ml-auto flex text-xs gap-1 items-center\">\n            <select \n              class=\"px-2 py-1.5 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 focus:ring-2 focus:ring-indigo-400 focus:border-indigo-400 cursor-pointer\"\n              bind:value={sortBy}\n            >\n              <option value=\"createdAt\">Created</option>\n              <option value=\"deadline\">Deadline</option>\n              <option value=\"emergency\">Priority</option>\n            </select>\n            <button \n              class=\"h-7 w-7 flex items-center justify-center bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md\"\n              on:click={() => sortDir = sortDir === 'asc' ? 'desc' : 'asc'}\n              title={sortDir === 'asc' ? 'Sort Ascending' : 'Sort Descending'}\n            >\n              <i class=\"fas fa-sort-{sortDir === 'asc' ? 'up' : 'down'} text-gray-500\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Tasks List -->\n    <div class=\"p-4 space-y-1.5\">\n      {#if filteredTodos.length === 0}\n        <div \n          class=\"text-center py-10 text-gray-500 dark:text-gray-400 italic\"\n          in:fade={{ duration: 200 }}\n        >\n          {searchTerm || filterTag || filterEmergency !== 'all' ? 'No matching tasks found' : 'No tasks yet. Create one!'}\n        </div>\n      {:else}\n        {#each filteredTodos as task (task.id)}\n          <div \n            role=\"button\"\n            tabindex=\"0\"\n            class=\"bg-white dark:bg-gray-800/90 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 hover:shadow-md hover:border-indigo-200 dark:hover:border-indigo-700/50 transition-all cursor-pointer relative overflow-hidden {selectedId === task.id ? 'border-l-4 border-l-indigo-500 dark:border-l-indigo-400' : ''} {getTaskStatusClass(task)} focus:outline-none focus:ring-2 focus:ring-indigo-300 dark:focus:ring-indigo-600\"\n            draggable=\"true\"\n            on:dragstart={() => handleDragStart(task.id)}\n            on:dragover|preventDefault={() => handleDragOver(task.id)}\n            on:drop|preventDefault={handleDrop}\n            on:dragend={handleDragEnd}\n            on:click={() => selectTask(task.id)}\n            on:keydown={(e) => handleTaskKeydown(e, task.id)}\n            in:fly={{ y: 10, duration: 200, delay: 50 }}\n            out:fly={{ y: -10, duration: 200 }}\n          >\n            {#if draggingId === task.id}\n              <div class=\"absolute inset-0 bg-indigo-100 dark:bg-indigo-900/30 z-0\"></div>\n            {/if}\n            {#if dragOverId === task.id}\n              <div class=\"absolute inset-0 border-2 border-dashed border-indigo-300 dark:border-indigo-700 rounded-xl z-0\"></div>\n            {/if}\n            <div class=\"p-3 z-10 relative flex items-start gap-3\">\n              <div>\n                <button \n                  class=\"h-5 w-5 rounded-full flex items-center justify-center border {task.completed ? 'bg-green-100 dark:bg-green-900/30 border-green-400 dark:border-green-600 text-green-600 dark:text-green-400' : 'border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800'}\"\n                  on:click|stopPropagation={() => toggleTaskComplete(task)}\n                >\n                  {#if task.completed}\n                    <i class=\"fas fa-check text-xs\"></i>\n                  {/if}\n                </button>\n              </div>\n              <div class=\"flex-1 min-w-0\">\n                <div class=\"flex justify-between items-start\">\n                  <h3 class=\"font-medium truncate text-sm {task.completed ? 'line-through text-gray-500 dark:text-gray-400' : 'text-gray-900 dark:text-white'}\">{task.text}</h3>\n                  <span \n                    class=\"ml-2 text-xs px-2 py-0.5 rounded-full border {getEmergencyColor(task.emergency)} whitespace-nowrap flex-shrink-0\"\n                  >\n                    {getEmergencyLabel(task.emergency)}\n                  </span>\n                </div>\n                \n                <div class=\"mt-1 flex flex-wrap items-center gap-x-3 gap-y-1 text-xs\">\n                  {#if task.deadline}\n                    <span class=\"{task.deadline && new Date(task.deadline) < new Date() ? 'text-red-500 dark:text-red-400' : 'text-gray-500 dark:text-gray-400'} flex items-center\">\n                      <i class=\"fas fa-calendar-alt mr-1.5\"></i>\n                      {formatRelativeDate(task.deadline)}\n                    </span>\n                  {/if}\n                  \n                  {#if task.tag}\n                    <span class=\"text-gray-500 dark:text-gray-400 flex items-center\">\n                      <i class=\"fas fa-tag mr-1.5\"></i>\n                      {task.tag}\n                    </span>\n                  {/if}\n                </div>\n              </div>\n            </div>\n            \n            {#if task.deadline && new Date(task.deadline) < new Date() && !task.completed}\n              <div class=\"absolute top-0 right-0 w-0 h-0 border-solid border-t-[20px] border-t-red-500 border-l-transparent border-l-[20px]\"></div>\n            {/if}\n          </div>\n        {/each}\n      {/if}\n      \n      {#if completedCount > 0}\n        <div class=\"flex justify-center pt-3\">\n          <button \n            class=\"text-xs px-3 py-1.5 text-gray-600 dark:text-gray-300 hover:bg-red-50 dark:hover:bg-red-900/20 hover:text-red-500 transition rounded-md\"\n            on:click={clearCompletedTasks}\n          >\n            <i class=\"fas fa-trash-alt mr-1.5\"></i>\n            Clear completed ({completedCount})\n          </button>\n        </div>\n      {/if}\n    </div>\n  </div>\n\n  <!-- Right: Task Detail or Add Panel -->\n  <div class=\"flex-1 bg-white dark:bg-gray-900 overflow-y-auto\">\n    {#if showAddPanel}\n      <!-- Add Task Form -->\n      <div \n        class=\"h-full flex flex-col p-6\"\n        in:fly={{ x: 20, duration: 200, easing: cubicOut }}\n        out:fly={{ x: 20, duration: 200, easing: cubicOut }}\n      >\n        <div class=\"flex justify-between items-center mb-6\">\n          <h2 class=\"text-xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-purple-600 dark:from-indigo-400 dark:to-purple-400\">Add New Task</h2>\n          <button \n            class=\"h-8 w-8 flex md:hidden items-center justify-center rounded-full bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-300\"\n            on:click={() => showAddPanel = false}\n          >\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        \n        <div class=\"space-y-5 flex-1\">\n          <div>\n            <label for=\"task-title\" class=\"block text-sm font-medium mb-1.5 text-gray-700 dark:text-gray-300\">Task Title*</label>\n            <input \n              id=\"task-title\"\n              type=\"text\" \n              class=\"w-full px-4 py-3 rounded-xl border border-gray-300 dark:border-gray-600 focus:ring-indigo-500 focus:border-indigo-500 bg-white dark:bg-gray-800\" \n              placeholder=\"What needs to be done?\"\n              bind:value={newTask.text}\n            />\n          </div>\n          \n          <div>\n            <label for=\"task-description\" class=\"block text-sm font-medium mb-1.5 text-gray-700 dark:text-gray-300\">Description (optional)</label>\n            <textarea \n              id=\"task-description\"\n              class=\"w-full px-4 py-3 rounded-xl border border-gray-300 dark:border-gray-600 focus:ring-indigo-500 focus:border-indigo-500 h-32 bg-white dark:bg-gray-800\" \n              placeholder=\"Add details about this task...\"\n              bind:value={newTask.description}\n            ></textarea>\n          </div>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label for=\"task-deadline\" class=\"block text-sm font-medium mb-1.5 text-gray-700 dark:text-gray-300\">Deadline (optional)</label>\n              <input \n                id=\"task-deadline\"\n                type=\"date\" \n                class=\"w-full px-4 py-2.5 rounded-xl border border-gray-300 dark:border-gray-600 focus:ring-indigo-500 focus:border-indigo-500 bg-white dark:bg-gray-800\" \n                bind:value={newTask.deadline}\n              />\n            </div>\n            \n            <div>\n              <label for=\"task-priority\" class=\"block text-sm font-medium mb-1.5 text-gray-700 dark:text-gray-300\">Priority</label>\n              <select \n                id=\"task-priority\"\n                class=\"w-full px-4 py-2.5 rounded-xl border border-gray-300 dark:border-gray-600 focus:ring-indigo-500 focus:border-indigo-500 bg-white dark:bg-gray-800\"\n                bind:value={newTask.emergency}\n              >\n                <option value={1}>Low</option>\n                <option value={2}>Medium-Low</option>\n                <option value={3}>Medium</option>\n                <option value={4}>High</option>\n                <option value={5}>Critical</option>\n              </select>\n            </div>\n          </div>\n          \n          <div>\n            <label for=\"task-tag\" class=\"block text-sm font-medium mb-1.5 text-gray-700 dark:text-gray-300\">Tag (optional)</label>\n            <div class=\"relative\">\n              <input \n                id=\"task-tag\"\n                list=\"tag-options\"\n                type=\"text\" \n                class=\"w-full px-4 py-2.5 rounded-xl border border-gray-300 dark:border-gray-600 focus:ring-indigo-500 focus:border-indigo-500 bg-white dark:bg-gray-800\" \n                placeholder=\"Add or select a tag\"\n                bind:value={newTask.tag}\n              />\n              <datalist id=\"tag-options\">\n                {#each uniqueTags as tag}\n                  <option value={tag} />\n                {/each}\n              </datalist>\n              <i class=\"fas fa-tag absolute right-4 top-3 text-gray-400\"></i>\n            </div>\n          </div>\n          \n          <div class=\"pt-4\">\n            <button \n              class=\"w-full py-3 px-6 rounded-xl bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white font-medium shadow-md transition transform hover:translate-y-[-1px] disabled:opacity-70 disabled:cursor-not-allowed\"\n              on:click={addTask}\n              disabled={!newTask.text?.trim()}\n            >\n              <i class=\"fas fa-plus mr-2\"></i>\n              Create Task\n            </button>\n          </div>\n        </div>\n      </div>\n    {:else if selectedTask}\n      <!-- Task Detail View -->\n      <div \n        class=\"h-full flex flex-col p-6\"\n        in:fade={{ duration: 200 }}\n      >\n        <div class=\"flex justify-between items-center mb-6\">\n          <div class=\"flex items-center gap-3\">\n            <button \n              class=\"h-8 w-8 md:hidden flex items-center justify-center rounded-full bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-300\"\n              on:click={() => selectedId = null}\n            >\n              <i class=\"fas fa-arrow-left\"></i>\n            </button>\n            <h2 class=\"text-xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-purple-600 dark:from-indigo-400 dark:to-purple-400\">Task Details</h2>\n          </div>\n          <div class=\"flex gap-2\">\n            <button \n              class=\"h-9 w-9 flex items-center justify-center rounded-lg bg-indigo-50 dark:bg-indigo-900/30 text-indigo-600 dark:text-indigo-400 hover:bg-indigo-100 dark:hover:bg-indigo-800/30 transition\"\n              on:click={() => startEdit(selectedTask)}\n              title=\"Edit task\"\n            >\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button \n              class=\"h-9 w-9 flex items-center justify-center rounded-lg bg-red-50 dark:bg-red-900/30 text-red-600 dark:text-red-400 hover:bg-red-100 dark:hover:bg-red-800/30 transition\"\n              on:click={() => deleteTask(selectedTask.id)}\n              title=\"Delete task\"\n            >\n              <i class=\"fas fa-trash-alt\"></i>\n            </button>\n          </div>\n        </div>\n        \n        {#if editing && editTask}\n          <!-- Edit Task Form -->\n          <div \n            class=\"space-y-5 flex-1 animate__animated animate__fadeIn\"\n            in:fade={{ duration: 200 }}\n          >\n            <div>\n              <label for=\"edit-title\" class=\"block text-sm font-medium mb-1.5 text-gray-700 dark:text-gray-300\">Task Title*</label>\n              <input \n                id=\"edit-title\"\n                type=\"text\" \n                class=\"w-full px-4 py-3 rounded-xl border border-gray-300 dark:border-gray-600 focus:ring-indigo-500 focus:border-indigo-500 bg-white dark:bg-gray-800\" \n                bind:value={editTask.text}\n              />\n            </div>\n            \n            <div>\n              <label for=\"edit-description\" class=\"block text-sm font-medium mb-1.5 text-gray-700 dark:text-gray-300\">Description</label>\n              <textarea \n                id=\"edit-description\"\n                class=\"w-full px-4 py-3 rounded-xl border border-gray-300 dark:border-gray-600 focus:ring-indigo-500 focus:border-indigo-500 h-32 bg-white dark:bg-gray-800\" \n                bind:value={editTask.description}\n              ></textarea>\n            </div>\n            \n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label for=\"edit-deadline\" class=\"block text-sm font-medium mb-1.5 text-gray-700 dark:text-gray-300\">Deadline</label>\n                <input \n                  id=\"edit-deadline\"\n                  type=\"date\" \n                  class=\"w-full px-4 py-2.5 rounded-xl border border-gray-300 dark:border-gray-600 focus:ring-indigo-500 focus:border-indigo-500 bg-white dark:bg-gray-800\" \n                  bind:value={editTask.deadline}\n                />\n              </div>\n              \n              <div>\n                <label for=\"edit-priority\" class=\"block text-sm font-medium mb-1.5 text-gray-700 dark:text-gray-300\">Priority</label>\n                <select \n                  id=\"edit-priority\"\n                  class=\"w-full px-4 py-2.5 rounded-xl border border-gray-300 dark:border-gray-600 focus:ring-indigo-500 focus:border-indigo-500 bg-white dark:bg-gray-800\"\n                  bind:value={editTask.emergency}\n                >\n                  <option value={1}>Low</option>\n                  <option value={2}>Medium-Low</option>\n                  <option value={3}>Medium</option>\n                  <option value={4}>High</option>\n                  <option value={5}>Critical</option>\n                </select>\n              </div>\n            </div>\n            \n            <div>\n              <label for=\"edit-tag\" class=\"block text-sm font-medium mb-1.5 text-gray-700 dark:text-gray-300\">Tag</label>\n              <div class=\"relative\">\n                <input \n                  id=\"edit-tag\"\n                  list=\"edit-tag-options\"\n                  type=\"text\" \n                  class=\"w-full px-4 py-2.5 rounded-xl border border-gray-300 dark:border-gray-600 focus:ring-indigo-500 focus:border-indigo-500 bg-white dark:bg-gray-800\" \n                  placeholder=\"Add or select a tag\"\n                  bind:value={editTask.tag}\n                />\n                <datalist id=\"edit-tag-options\">\n                  {#each uniqueTags as tag}\n                    <option value={tag} />\n                  {/each}\n                </datalist>\n                <i class=\"fas fa-tag absolute right-4 top-3 text-gray-400\"></i>\n              </div>\n            </div>\n            \n            <div class=\"flex gap-3 pt-4 justify-end\">\n              <button \n                class=\"py-2.5 px-5 rounded-lg bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-200 font-medium transition\"\n                on:click={() => {editing = false; editTask = null;}}\n              >\n                Cancel\n              </button>\n              <button \n                class=\"py-2.5 px-5 rounded-lg bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white font-medium shadow-md transition\"\n                on:click={saveEdit}\n                disabled={!editTask.text?.trim()}\n              >\n                Save Changes\n              </button>\n            </div>\n          </div>\n        {:else}\n          <!-- Task Viewing -->\n          <div class=\"space-y-6 flex-1\">\n            <div class=\"flex items-start gap-4\">\n              <button \n                class=\"mt-1 h-6 w-6 rounded-full flex items-center justify-center border {selectedTask.completed ? 'bg-green-100 dark:bg-green-900/30 border-green-400 dark:border-green-600 text-green-600 dark:text-green-400' : 'border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800'}\"\n                on:click={() => toggleTaskComplete(selectedTask)}\n              >\n                {#if selectedTask.completed}\n                  <i class=\"fas fa-check text-xs\"></i>\n                {/if}\n              </button>\n              <div class=\"flex-1\">\n                <h3 class=\"text-xl font-semibold {selectedTask.completed ? 'line-through text-gray-500 dark:text-gray-400' : 'text-gray-900 dark:text-white'}\">{selectedTask.text}</h3>\n              </div>\n            </div>\n            \n            <div class=\"flex flex-wrap gap-3 pt-2\">\n              <span \n                class=\"text-sm px-3 py-1 rounded-lg {getEmergencyColor(selectedTask.emergency)}\"\n              >\n                <i class=\"fas fa-flag mr-1.5\"></i>\n                {getEmergencyLabel(selectedTask.emergency)}\n              </span>\n              \n              {#if selectedTask.deadline}\n                <span \n                  class=\"text-sm px-3 py-1 rounded-lg {new Date(selectedTask.deadline) < new Date() && !selectedTask.completed ? 'bg-red-50 dark:bg-red-900/30 text-red-600 dark:text-red-400 border border-red-200 dark:border-red-800' : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-700'}\"\n                >\n                  <i class=\"fas fa-calendar-alt mr-1.5\"></i>\n                  {formatRelativeDate(selectedTask.deadline)}\n                </span>\n              {/if}\n              \n              {#if selectedTask.tag}\n                <span \n                  class=\"text-sm px-3 py-1 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-700\"\n                >\n                  <i class=\"fas fa-tag mr-1.5\"></i>\n                  {selectedTask.tag}\n                </span>\n              {/if}\n              \n              <span \n                class=\"text-sm px-3 py-1 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-700\"\n              >\n                <i class=\"fas fa-clock mr-1.5\"></i>\n                Created {new Date(selectedTask.createdAt).toLocaleDateString()}\n              </span>\n            </div>\n            \n            <div class=\"pt-6\">\n              <h4 class=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Description</h4>\n              <div class=\"p-4 rounded-xl bg-gray-50 dark:bg-gray-800/80 border border-gray-200 dark:border-gray-700/80 min-h-[200px] text-gray-700 dark:text-gray-300 whitespace-pre-line\">\n                {selectedTask.description || 'No description provided.'}\n              </div>\n            </div>\n          </div>\n        {/if}\n      </div>\n    {:else}\n      <!-- No task selected -->\n      <div class=\"h-full flex flex-col items-center justify-center p-6 text-center\">\n        <img src=\"https://illustrations.popsy.co/gray/task-list.svg\" alt=\"No task selected\" class=\"w-64 h-64 mb-6 opacity-70\" />\n        <h3 class=\"text-xl font-semibold text-gray-700 dark:text-gray-300 mb-2\">No Task Selected</h3>\n        <p class=\"text-gray-500 dark:text-gray-400 max-w-md mb-6\">Select a task from the list to view details or click the + button to create a new task.</p>\n        <button \n          class=\"py-2.5 px-5 rounded-lg bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white font-medium shadow-md transition transform hover:translate-y-[-1px]\"\n          on:click={() => showAddPanel = true}\n        >\n          <i class=\"fas fa-plus mr-2\"></i>\n          Create New Task\n        </button>\n      </div>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .bg-striped {\n    background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n    background-size: 1rem 1rem;\n    animation: progress-bar-stripes 1s linear infinite;\n  }\n\n  @keyframes progress-bar-stripes {\n    from { background-position: 1rem 0; }\n    to { background-position: 0 0; }\n  }\n\n  .overdue {\n    @apply border-l-red-500 dark:border-l-red-400 border-l-4;\n  }\n\n  .due-soon {\n    @apply border-l-yellow-500 dark:border-l-yellow-400 border-l-4;\n  }\n</style>\n"],"names":["$.store_get","$.attr_class","$.stringify","$.attr","$.attr_style","$.escape"],"mappings":"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"}