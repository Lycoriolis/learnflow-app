{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../src/routes/tools/flashcards/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { persistentStore } from '$lib/stores/persistentStore';\n  import { fade } from 'svelte/transition';\n\n  interface Flashcard {\n    id: string;\n    front: string;\n    back: string;\n    tags: string[];\n    lastReviewed?: number;\n    nextReview?: number;\n    level: number;\n    createdAt: number;\n  }\n\n  const flashcards = persistentStore<Flashcard[]>('learnflow-flashcards', []);\n  let currentCard: Flashcard | null = null;\n  let showingFront = true;\n  let newCardFront = '';\n  let newCardBack = '';\n  let newCardTags = '';\n  let filterTag = '';\n  let sortBy: 'nextReview' | 'level' | 'created' = 'nextReview';\n\n  $: filteredCards = filterTag \n    ? $flashcards.filter(card => card.tags.includes(filterTag))\n    : $flashcards;\n\n  $: sortedCards = [...filteredCards].sort((a, b) => {\n    if (sortBy === 'nextReview') {\n      return (a.nextReview || 0) - (b.nextReview || 0);\n    } else if (sortBy === 'level') {\n      return b.level - a.level;\n    } else {\n      return (a.createdAt || 0) - (b.createdAt || 0);\n    }\n  });\n\n  $: stats = {\n    total: $flashcards.length,\n    mastered: $flashcards.filter(c => c.level === 5).length,\n    dueToday: $flashcards.filter(c => !c.nextReview || c.nextReview <= Date.now()).length,\n    avgLevel: $flashcards.length ? \n      Math.round($flashcards.reduce((sum, c) => sum + c.level, 0) / $flashcards.length * 10) / 10 \n      : 0\n  };\n\n  function getNextCard(): Flashcard | null {\n    const now = Date.now();\n    const dueCards = sortedCards.filter(card => !card.nextReview || card.nextReview <= now);\n    if (dueCards.length === 0) return null;\n    return dueCards[0];\n  }\n\n  function addCard() {\n    if (!newCardFront.trim() || !newCardBack.trim()) return;\n    \n    const card: Flashcard = {\n      id: crypto.randomUUID(),\n      front: newCardFront,\n      back: newCardBack,\n      level: 0,\n      tags: newCardTags.split(',').map(t => t.trim()).filter(t => t),\n      createdAt: Date.now()\n    };\n    \n    flashcards.update(cards => [...cards, card]);\n    newCardFront = '';\n    newCardBack = '';\n    newCardTags = '';\n  }\n\n  function flipCard() {\n    showingFront = !showingFront;\n  }\n\n  async function reviewCard(success: boolean) {\n    if (!currentCard) return;\n    \n    const now = Date.now();\n    let nextLevel = success ? currentCard.level + 1 : Math.max(0, currentCard.level - 1);\n    nextLevel = Math.min(5, nextLevel);\n    \n    const intervals = [\n      1000 * 60 * 30,\n      1000 * 60 * 60 * 4,\n      1000 * 60 * 60 * 24,\n      1000 * 60 * 60 * 24 * 3,\n      1000 * 60 * 60 * 24 * 7,\n      1000 * 60 * 60 * 24 * 14\n    ];\n\n    flashcards.update(cards => \n      cards.map(card => \n        card.id === currentCard.id \n          ? {\n              ...card,\n              level: nextLevel,\n              lastReviewed: now,\n              nextReview: now + intervals[nextLevel]\n            }\n          : card\n      )\n    );\n\n    currentCard = getNextCard();\n    showingFront = true;\n  }\n\n  function deleteCard(id: string) {\n    if (!confirm('Are you sure you want to delete this card?')) return;\n    flashcards.update(cards => cards.filter(c => c.id !== id));\n    if (currentCard?.id === id) {\n      currentCard = getNextCard();\n      showingFront = true;\n    }\n  }\n\n  function handleCardKeydown(event: KeyboardEvent) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      flipCard();\n    }\n  }\n\n  $: uniqueTags = Array.from(new Set($flashcards.flatMap(c => c.tags)));\n\n  $: if (!currentCard) {\n    currentCard = getNextCard();\n  }\n</script>\n\n<svelte:head>\n  <title>Flashcards | LearnFlow</title>\n</svelte:head>\n\n<div class=\"max-w-4xl mx-auto px-4 py-10\">\n  <div class=\"flex justify-between items-start mb-8\">\n    <div>\n      <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white mb-2 flex items-center\">\n        <i class=\"fas fa-layer-group mr-3 text-orange-500\"></i> Flashcards\n      </h1>\n      <p class=\"text-gray-600 dark:text-gray-400\">Study smarter with spaced repetition flashcards</p>\n    </div>\n  </div>\n\n  <div class=\"flex flex-wrap gap-4 mb-8\">\n    <select\n      bind:value={filterTag}\n      class=\"px-3 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg text-sm\"\n    >\n      <option value=\"\">All Tags</option>\n      {#each uniqueTags as tag}\n        <option value={tag}>{tag}</option>\n      {/each}\n    </select>\n\n    <select\n      bind:value={sortBy}\n      class=\"px-3 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg text-sm\"\n    >\n      <option value=\"nextReview\">Sort by Due Date</option>\n      <option value=\"level\">Sort by Level</option>\n      <option value=\"created\">Sort by Created</option>\n    </select>\n  </div>\n\n  <div class=\"grid grid-cols-1 lg:grid-cols-5 gap-8\">\n    <div class=\"lg:col-span-3\">\n      {#if currentCard}\n        <div class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg\">\n          <div class=\"mb-4 flex justify-between items-center\">\n            <div class=\"flex gap-2\">\n              {#each currentCard.tags as tag}\n                <span class=\"px-2 py-1 bg-indigo-100 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300 rounded text-xs\">{tag}</span>\n              {/each}\n            </div>\n            <div class=\"text-sm text-gray-500 dark:text-gray-400\">\n              Level: {currentCard.level}/5\n            </div>\n          </div>\n\n          <div\n            role=\"button\"\n            tabindex=\"0\"\n            class=\"min-h-[200px] p-6 bg-gray-50 dark:bg-gray-900 rounded-lg shadow-inner flex items-center justify-center cursor-pointer select-none mb-6 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n            on:click={flipCard}\n            on:keydown={handleCardKeydown}\n            transition:fade\n          >\n            <div class=\"prose dark:prose-invert max-w-none text-center\">\n              {showingFront ? currentCard.front : currentCard.back}\n            </div>\n          </div>\n\n          <div class=\"flex justify-between\">\n            <button\n              on:click={() => reviewCard(false)}\n              class=\"px-6 py-3 bg-red-600 text-white rounded-lg font-medium hover:bg-red-700 transition flex items-center\"\n            >\n              <i class=\"fas fa-times mr-2\"></i> Again\n            </button>\n            <button\n              on:click={() => deleteCard(currentCard.id)}\n              class=\"px-6 py-3 bg-gray-600 text-white rounded-lg font-medium hover:bg-gray-700 transition\"\n            >\n              <i class=\"fas fa-trash-alt\"></i>\n            </button>\n            <button\n              on:click={() => reviewCard(true)}\n              class=\"px-6 py-3 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 transition flex items-center\"\n            >\n              <i class=\"fas fa-check mr-2\"></i> Good\n            </button>\n          </div>\n        </div>\n      {:else}\n        <div class=\"bg-white dark:bg-gray-800 p-8 rounded-xl shadow-lg text-center\">\n          <i class=\"fas fa-check-circle text-green-500 text-4xl mb-4\"></i>\n          <h3 class=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">All Caught Up!</h3>\n          <p class=\"text-gray-600 dark:text-gray-400\">No cards due for review. Add new cards or check back later.</p>\n        </div>\n      {/if}\n    </div>\n\n    <div class=\"lg:col-span-2\">\n      <div class=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg\">\n        <h3 class=\"text-lg font-bold text-gray-900 dark:text-white mb-4\">Add New Card</h3>\n        <div class=\"space-y-4\">\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Front</label>\n            <textarea\n              bind:value={newCardFront}\n              rows=\"3\"\n              class=\"w-full px-3 py-2 bg-gray-50 dark:bg-gray-900 border border-gray-300 dark:border-gray-600 rounded-lg\"\n              placeholder=\"Question or term...\"\n            ></textarea>\n          </div>\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Back</label>\n            <textarea\n              bind:value={newCardBack}\n              rows=\"3\"\n              class=\"w-full px-3 py-2 bg-gray-50 dark:bg-gray-900 border border-gray-300 dark:border-gray-600 rounded-lg\"\n              placeholder=\"Answer or definition...\"\n            ></textarea>\n          </div>\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Tags</label>\n            <input\n              type=\"text\"\n              bind:value={newCardTags}\n              class=\"w-full px-3 py-2 bg-gray-50 dark:bg-gray-900 border border-gray-300 dark:border-gray-600 rounded-lg\"\n              placeholder=\"math, history, etc (comma separated)\"\n            />\n          </div>\n          <button\n            on:click={addCard}\n            class=\"w-full py-3 bg-orange-600 text-white rounded-lg font-medium hover:bg-orange-700 transition\"\n            disabled={!newCardFront.trim() || !newCardBack.trim()}\n          >\n            <i class=\"fas fa-plus mr-2\"></i> Add Card\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"],"names":["$.store_get","$.attr","$.ensure_array_like","$.escape"],"mappings":";;;;;MAwBK,eAIA,aAgGA;QA7GG,aAAa,gBAA6B,wBAAsB,EAAA;AAClE,MAAA,cAAgC;AAEhC,MAAA,eAAe;AACf,MAAA,cAAc;AACd,MAAA,cAAc;AA2BT,WAAA,cAAgC;UACjC,MAAM,KAAK,IAAG;AACd,UAAA,WAAW,YAAY,QAAO,SAAI,CAAK,KAAK,cAAc,KAAK,cAAc,GAAG;AAClF,QAAA,SAAS,WAAW,UAAU;AAC3B,WAAA,SAAS,CAAC;AAAA,EACnB;AA5BG,kBACwDA,UAAA,iBAAA,CAAA,GAAA,eAAA,UAAA;AAGxD,gBAAW,CAAA,GAAO,aAAa,EAAE,MAAM,GAAG,MAAM;AACpB;cACnB,EAAE,cAAc,MAAM,EAAE,cAAc;AAAA,IAChD;AAAA,GAKD;AAEO,GAAA;AAAA,IACN,iEAAmB;AAAA,IACnB,UAAQA,UAAA,iBAAA,CAAA,GAAA,eAAA,UAAA,EAAc,OAAM,CAAC,MAAK,EAAE,UAAU,CAAC,EAAE;AAAA,IACjD,oEAAsB,OAAM,CAAC,MAAC,CAAK,EAAE,cAAc,EAAE,cAAc,KAAK,OAAO;AAAA,IAC/E,UAAQA,UAAA,iBAAA,CAAA,GAAA,eAAA,UAAA,EAAc,SACpB,KAAK,MAAKA,UAAA,iBAAA,CAAA,GAAA,eAAA,UAAA,EAAa,OAAM,CAAE,KAAK,MAAM,MAAM,EAAE,OAAO,CAAC,IAAgBA,UAAA,iBAAA,CAAA,GAAA,eAAA,UAAA,EAAA,SAAS,EAAE,IAAI,KACvF;AAAA;AAgFH,eAAa,MAAM,KAAS,IAAA,IAAgBA,UAAA,iBAAA,CAAA,GAAA,eAAA,UAAA,EAAA,QAAQ,CAAA,MAAK,EAAE,IAAI,CAAA,CAAA;AAE1D,MAAA,CAAA,aAAa;AACnB,kBAAc,YAAW;AAAA,EAC3B;uCAuBW,UAAU;;;;;;QAAI,MAAG,WAAA,OAAA;AACP,cAAA,OAAA,UAAAC,KAAA,SAAA,GAAG,iBAAG,GAAG,CAAA;AAAA;;MAgBrB,aAAW;;AAID,UAAA,eAAAC,kBAAA,YAAY,IAAI;;;UAAI,MAAG,aAAA,SAAA;oJACmF,GAAG,CAAA;AAAA;gHAI5G,YAAY,KAAK,CAAA,mTAAAC,YAaT,YAAY,KAAwB,CAAA;AAAA;;;;;6BAyCxC,YAAY;;;;;+BASZ,WAAW;;;;AAUX,YAAA,OAAA,wIAAAF,KAAA,SAAA,WAAW,uSAQd,aAAa,KAAI,KAAO,CAAA,YAAY,QAAI,IAAA,CAAA;;;;"}