{"version":3,"file":"_page.svelte.js","sources":["../../../../../../src/lib/components/ExerciseCard.svelte","../../../../../../src/routes/exercises/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import type { Exercise } from '$lib/services/courses/exerciseService';\n  import { getAuth, type Auth, type User } from 'firebase/auth';\n  import { doc, getDoc, getFirestore, type Firestore } from 'firebase/firestore';\n  import { onMount } from 'svelte';\n  import { browser } from '$app/environment';\n  \n  // Accept all Exercise properties as props\n  export let id: string;\n  export let title: string;\n  export let description: string | null = null;\n  export let difficulty: 'beginner' | 'intermediate' | 'advanced' | null = null;\n  export let category: string | null = null;\n  export let tags: string[] = [];\n  export let estimatedTime: string | null = null;\n  export let points: number = 0;\n  export let href: string | undefined = undefined;\n  export let onClick: (() => void) | undefined = undefined;\n  export let progressStatus: 'completed' | 'inProgress' | 'notStarted' | undefined = undefined;\n  \n  const dispatch = createEventDispatcher<{\n    click: { id: string };\n  }>();\n  \n  let isCompleted = progressStatus === 'completed';\n  let isInProgress = progressStatus === 'inProgress';\n  let isLoading = !progressStatus && browser;\n  let auth: Auth | null = null;\n  let db: Firestore | null = null;\n  let user: User | null = null;\n  \n  onMount(async () => {\n    if (!browser) return;\n    \n    // Only check progress if not explicitly set through props\n    if (progressStatus === undefined) {\n      try {\n        auth = getAuth();\n        db = getFirestore();\n        user = auth.currentUser;\n        \n        if (user) {\n          await checkUserProgress();\n        }\n      } catch (err) {\n        console.error('Error initializing auth:', err);\n      } finally {\n        isLoading = false;\n      }\n    } else {\n      isLoading = false;\n    }\n  });\n  \n  async function checkUserProgress() {\n    if (!browser || !db || !user) return;\n    \n    try {\n      const userProgressRef = doc(db, 'users', user.uid, 'progress', 'exercises');\n      \n      const userProgressDoc = await getDoc(userProgressRef);\n      if (userProgressDoc.exists()) {\n        const data = userProgressDoc.data();\n        \n        if (data.completed && data.completed[id]) {\n          isCompleted = true;\n        } else if (data.inProgress && data.inProgress[id]) {\n          isInProgress = true;\n        }\n      }\n    } catch (err) {\n      console.error('Error checking exercise progress:', err);\n    }\n  }\n  \n  function getDifficultyColor() {\n    if (!difficulty) return 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300';\n    \n    switch (difficulty) {\n      case 'beginner':\n        return 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300';\n      case 'intermediate':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300';\n      case 'advanced':\n        return 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300';\n    }\n  }\n  \n  function handleClick() {\n    if (onClick) {\n      onClick();\n    } else {\n      dispatch('click', { id });\n    }\n  }\n  \n  function handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      handleClick();\n    }\n  }\n</script>\n\n{#if href}\n  <a\n    {href}\n    class=\"exercise-card relative bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden flex flex-col h-full\"\n    tabindex=\"0\"\n    aria-label={`Exercise: ${title}`}\n  >\n    <div class=\"card-content\">\n      {#if isCompleted}\n        <div class=\"absolute top-3 right-3 w-6 h-6 rounded-full bg-green-500 flex items-center justify-center\" aria-label=\"Completed\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 text-white\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n      {:else if isInProgress}\n        <div class=\"absolute top-3 right-3 w-6 h-6 rounded-full border-2 border-blue-500 border-dashed animate-spin-slow\" aria-label=\"In progress\"></div>\n      {:else if isLoading}\n        <div class=\"absolute top-3 right-3 w-6 h-6 rounded-full border-2 border-gray-300 border-dashed animate-spin-slow\" aria-label=\"Loading\"></div>\n      {/if}\n      \n      <!-- Card content -->\n      <div class=\"p-5 flex-grow\">\n        <h3 class=\"text-lg font-bold text-gray-900 dark:text-white mb-2 pr-6\">{title}</h3>\n        \n        {#if description}\n          <p class=\"text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-2\">{description}</p>\n        {/if}\n        \n        <div class=\"flex flex-wrap gap-2 mb-3\">\n          {#if difficulty}\n            <span class={`text-xs font-medium px-2.5 py-0.5 rounded-full ${getDifficultyColor()}`}>\n              {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)}\n            </span>\n          {/if}\n          \n          {#if category}\n            <span class=\"text-xs font-medium bg-cherry-100 text-cherry-800 dark:bg-cherry-900/30 dark:text-cherry-300 px-2.5 py-0.5 rounded-full\">\n              {category}\n            </span>\n          {/if}\n        </div>\n        \n        {#if tags.length > 0}\n          <div class=\"flex flex-wrap gap-1 mb-3\">\n            {#each tags.slice(0, 3) as tag}\n              <span class=\"text-xs bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-300 px-2 py-0.5 rounded-full\">\n                {tag}\n              </span>\n            {/each}\n            {#if tags.length > 3}\n              <span class=\"text-xs bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-300 px-2 py-0.5 rounded-full\">\n                +{tags.length - 3} more\n              </span>\n            {/if}\n          </div>\n        {/if}\n      </div>\n      \n      <div class=\"border-t border-gray-200 dark:border-gray-700 p-4 flex justify-between items-center bg-gray-50 dark:bg-gray-900/30\">\n        {#if estimatedTime}\n          <div class=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            {estimatedTime}\n          </div>\n        {:else}\n          <div></div>\n        {/if}\n        \n        {#if points > 0}\n          <div class=\"flex items-center text-xs font-medium text-amber-600 dark:text-amber-400\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            {points} pts\n          </div>\n        {/if}\n      </div>\n    </div>\n  </a>\n{:else}\n  <article\n    class=\"exercise-card relative bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden flex flex-col h-full\"\n    on:click={handleClick}\n    on:keydown={handleKeyDown}\n    tabindex=\"0\"\n    role=\"button\"\n    aria-label={`Exercise: ${title}`}\n    aria-pressed=\"false\"\n  >\n    <div class=\"card-content\">\n      {#if isCompleted}\n        <div class=\"absolute top-3 right-3 w-6 h-6 rounded-full bg-green-500 flex items-center justify-center\" aria-label=\"Completed\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 text-white\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n      {:else if isInProgress}\n        <div class=\"absolute top-3 right-3 w-6 h-6 rounded-full border-2 border-blue-500 border-dashed animate-spin-slow\" aria-label=\"In progress\"></div>\n      {:else if isLoading}\n        <div class=\"absolute top-3 right-3 w-6 h-6 rounded-full border-2 border-gray-300 border-dashed animate-spin-slow\" aria-label=\"Loading\"></div>\n      {/if}\n      \n      <!-- Card content -->\n      <div class=\"p-5 flex-grow\">\n        <h3 class=\"text-lg font-bold text-gray-900 dark:text-white mb-2 pr-6\">{title}</h3>\n        \n        {#if description}\n          <p class=\"text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-2\">{description}</p>\n        {/if}\n        \n        <div class=\"flex flex-wrap gap-2 mb-3\">\n          {#if difficulty}\n            <span class={`text-xs font-medium px-2.5 py-0.5 rounded-full ${getDifficultyColor()}`}>\n              {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)}\n            </span>\n          {/if}\n          \n          {#if category}\n            <span class=\"text-xs font-medium bg-cherry-100 text-cherry-800 dark:bg-cherry-900/30 dark:text-cherry-300 px-2.5 py-0.5 rounded-full\">\n              {category}\n            </span>\n          {/if}\n        </div>\n        \n        {#if tags.length > 0}\n          <div class=\"flex flex-wrap gap-1 mb-3\">\n            {#each tags.slice(0, 3) as tag}\n              <span class=\"text-xs bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-300 px-2 py-0.5 rounded-full\">\n                {tag}\n              </span>\n            {/each}\n            {#if tags.length > 3}\n              <span class=\"text-xs bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-300 px-2 py-0.5 rounded-full\">\n                +{tags.length - 3} more\n              </span>\n            {/if}\n          </div>\n        {/if}\n      </div>\n      \n      <div class=\"border-t border-gray-200 dark:border-gray-700 p-4 flex justify-between items-center bg-gray-50 dark:bg-gray-900/30\">\n        {#if estimatedTime}\n          <div class=\"flex items-center text-xs text-gray-500 dark:text-gray-400\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            {estimatedTime}\n          </div>\n        {:else}\n          <div></div>\n        {/if}\n        \n        {#if points > 0}\n          <div class=\"flex items-center text-xs font-medium text-amber-600 dark:text-amber-400\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            {points} pts\n          </div>\n        {/if}\n      </div>\n    </div>\n  </article>\n{/if}\n\n<style>\n  .exercise-card {\n    cursor: pointer;\n  }\n  \n  .exercise-card:focus {\n    outline: 2px solid #ef4444;\n    outline-offset: 2px;\n  }\n  \n  :global(.animate-spin-slow) {\n    animation: spin 3s linear infinite;\n  }\n  \n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  \n  /* Using standard CSS with line-clamp property */\n  .line-clamp-2 {\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    line-clamp: 2; /* Standard property for future compatibility */\n  }\n</style>","<script lang=\"ts\">\n  export let data;\n  import ExerciseCard from '$lib/components/ExerciseCard.svelte';\n\n  const { categories, latestExercises, allExercises } = data;\n\n  // Group exercises by difficulty for display\n  $: exercisesByDifficulty = {\n    beginner: allExercises.filter(ex => ex.difficulty === 'beginner'),\n    intermediate: allExercises.filter(ex => ex.difficulty === 'intermediate'),\n    advanced: allExercises.filter(ex => ex.difficulty === 'advanced')\n  };\n</script>\n\n<svelte:head>\n  <title>Exercises | LearnFlow</title>\n  <meta name=\"description\" content=\"Browse all exercises, categories, and practice your skills on LearnFlow.\" />\n</svelte:head>\n\n<div class=\"min-h-screen p-6 bg-gray-900 text-gray-100\">\n  <h1 class=\"text-4xl font-bold mb-8\">Exercises</h1>\n\n  <!-- Categories Section -->\n  {#if categories.length > 0}\n    <section class=\"mb-12\">\n      <h2 class=\"text-2xl font-semibold mb-4\">Categories</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {#each categories as category}\n          <a \n            href={`/exercises/${category.slug}`}\n            class=\"block p-6 rounded-lg bg-gradient-to-br from-blue-800 to-blue-700 hover:from-blue-700 hover:to-blue-600 transition-all shadow-lg\"\n          >\n            <div class=\"flex items-center mb-3\">\n              <i class=\"fas {category.icon} text-blue-300 mr-3 text-xl\"></i>\n              <h3 class=\"text-xl font-semibold\">{category.title}</h3>\n            </div>\n            <p class=\"text-blue-100\">{category.description}</p>\n          </a>\n        {/each}\n      </div>\n    </section>\n  {/if}\n\n  <!-- Latest Exercises Section -->\n  {#if latestExercises.length > 0}\n    <section class=\"mb-12\">\n      <h2 class=\"text-2xl font-semibold mb-4\">Latest Exercises</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {#each latestExercises as exercise}\n          <ExerciseCard {exercise} href={`/exercises/${exercise.id}`} />\n        {/each}\n      </div>\n    </section>\n  {/if}\n\n  <!-- Exercises by Difficulty -->\n  {#if exercisesByDifficulty.beginner.length > 0}\n    <section class=\"mb-12\">\n      <h2 class=\"text-2xl font-semibold mb-4\">Beginner Exercises</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {#each exercisesByDifficulty.beginner.slice(0, 6) as exercise}\n          <ExerciseCard {exercise} href={`/exercises/${exercise.id}`} />\n        {/each}\n      </div>\n    </section>\n  {/if}\n\n  {#if exercisesByDifficulty.intermediate.length > 0}\n    <section class=\"mb-12\">\n      <h2 class=\"text-2xl font-semibold mb-4\">Intermediate Exercises</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {#each exercisesByDifficulty.intermediate.slice(0, 6) as exercise}\n          <ExerciseCard {exercise} href={`/exercises/${exercise.id}`} />\n        {/each}\n      </div>\n    </section>\n  {/if}\n\n  {#if exercisesByDifficulty.advanced.length > 0}\n    <section class=\"mb-12\">\n      <h2 class=\"text-2xl font-semibold mb-4\">Advanced Exercises</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {#each exercisesByDifficulty.advanced.slice(0, 6) as exercise}\n          <ExerciseCard {exercise} href={`/exercises/${exercise.id}`} />\n        {/each}\n      </div>\n    </section>\n  {/if}\n\n  <!-- All Exercises Section -->\n  {#if allExercises.length > 0}\n    <section>\n      <h2 class=\"text-2xl font-semibold mb-4\">All Exercises</h2>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {#each allExercises as exercise}\n          <ExerciseCard {exercise} href={`/exercises/${exercise.id}`} />\n        {/each}\n      </div>\n    </section>\n  {/if}\n</div>"],"names":["$.fallback","$.attr_class","$.escape","$.ensure_array_like","$.attr","$.stringify"],"mappings":"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"}