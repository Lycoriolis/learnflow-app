{"version":3,"file":"_page.svelte.js","sources":["../../../../../../src/routes/groups/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { fade } from 'svelte/transition';\n\n  // Types\n  type UserGroup = {\n    id: string;\n    name: string;\n    description: string;\n    topic: string;\n    image?: string;\n    memberCount: number;\n    isPublic: boolean;\n    createdBy: string;\n    createdAt: string;\n    isMember?: boolean; // Added to track if the current user is a member\n  };\n\n  // User groups data fetched from API\n  let allGroups: UserGroup[] = [];\n\n  // Filter and search state\n  let searchQuery = '';\n  let selectedTopic = 'all';\n\n  // Extract unique topics for filtering (computed after fetch)\n  $: groupTopics = [\n    'all',\n    ...Array.from(new Set(allGroups.map(group => group.topic)))\n  ];\n\n  // Filtered and searched groups\n  $: filteredGroups = allGroups.filter(group => {\n    const matchesTopic = selectedTopic === 'all' || group.topic === selectedTopic;\n    const matchesSearch = searchQuery === '' || \n      group.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      group.description.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesTopic && matchesSearch;\n  });\n\n  // Separate groups the user is a member of\n  $: myGroups = allGroups.filter(group => group.isMember);\n  $: discoverGroups = filteredGroups.filter(group => !group.isMember);\n\n  // Function to handle joining/leaving a group\n  async function toggleGroupMembership(groupId: string, isMember: boolean) {\n    try {\n      const endpoint = isMember ? '/api/groups/leave' : '/api/groups/join';\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ group_id: groupId })\n      });\n      if (res.ok) {\n        const groupIndex = allGroups.findIndex(g => g.id == groupId || g.id === groupId);\n        if (groupIndex !== -1) {\n          allGroups[groupIndex].isMember = !isMember;\n          allGroups = [...allGroups];\n        }\n      } else {\n        alert('Failed to update group membership.');\n      }\n    } catch (e) {\n      alert('Error updating group membership.');\n    }\n  }\n\n  // Loading state\n  let loading = true;\n\n  onMount(async () => {\n    loading = true;\n    try {\n      const res = await fetch('/api/groups/');\n      if (res.ok) {\n        allGroups = await res.json();\n      } else {\n        allGroups = [];\n      }\n    } catch (e) {\n      allGroups = [];\n    } finally {\n      loading = false;\n    }\n  });\n\n  function handleJoin(id: string) {\n    toggleGroupMembership(id, false);\n  }\n\n  function handleLeave(id: string) {\n    toggleGroupMembership(id, true);\n  }\n</script>\n\n<svelte:head>\n  <title>User Groups | LearnFlow</title>\n</svelte:head>\n\n<div class=\"container mx-auto px-4 py-8 max-w-7xl\">\n  {#if loading}\n    <div class=\"flex justify-center items-center h-64\">\n      <div class=\"loader\"></div>\n    </div>\n  {:else}\n    <div in:fade={{ duration: 300 }}>\n      <!-- Header Section -->\n      <div class=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-8\">\n        <div>\n          <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">Study Groups</h1>\n          <p class=\"text-gray-600 dark:text-gray-400\">Connect, collaborate, and learn with fellow students</p>\n        </div>\n        \n        <div class=\"mt-4 md:mt-0\">\n          <a \n            href=\"/groups/create\" \n            class=\"px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded-md text-sm font-medium flex items-center transition-colors\"\n          >\n            <i class=\"fas fa-plus mr-2\"></i>\n            Create New Group\n          </a>\n        </div>\n      </div>\n      \n      <!-- Search and Filter Bar -->\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-100 dark:border-gray-700 p-4 mb-8\">\n        <div class=\"flex flex-col md:flex-row gap-4\">\n          <div class=\"relative flex-grow\">\n            <input \n              type=\"text\" \n              class=\"w-full pl-10 pr-4 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n              placeholder=\"Search groups by name or description...\"\n              bind:value={searchQuery}\n            />\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"fas fa-search text-gray-400\"></i>\n            </div>\n          </div>\n          \n          <div class=\"relative\">\n            <select\n              class=\"appearance-none pl-4 pr-10 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200 focus:outline-none focus:ring-2 focus:ring-indigo-500 min-w-[180px]\"\n              bind:value={selectedTopic}\n            >\n              {#each groupTopics as topic}\n                <option value={topic}>{topic === 'all' ? 'All Topics' : topic}</option>\n              {/each}\n            </select>\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n              <i class=\"fas fa-chevron-down text-gray-400\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- My Groups Section -->\n      {#if myGroups.length > 0}\n        <div class=\"mb-12\">\n          <h2 class=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">My Groups</h2>\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {#each myGroups as group (group.id)}\n              <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-100 dark:border-gray-700 overflow-hidden flex flex-col\">\n                {#if group.image}\n                  <img src={group.image} alt={group.name} class=\"w-full h-32 object-cover\"/>\n                {:else}\n                  <div class=\"w-full h-32 bg-gradient-to-r from-indigo-100 to-purple-100 dark:from-indigo-900/30 dark:to-purple-900/30 flex items-center justify-center\">\n                     <i class=\"fas fa-users text-4xl text-indigo-400 dark:text-indigo-600\"></i>\n                  </div>\n                {/if}\n                <div class=\"p-5 flex-1 flex flex-col\">\n                  <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white mb-1\">{group.name}</h3>\n                  <p class=\"text-sm text-gray-500 dark:text-gray-400 mb-3\">Topic: {group.topic}</p>\n                  <p class=\"text-sm text-gray-600 dark:text-gray-300 mb-4 line-clamp-2 flex-1\">{group.description}</p>\n                  <div class=\"flex justify-between items-center text-xs text-gray-500 dark:text-gray-400 mb-4\">\n                    <span><i class=\"fas fa-users mr-1\"></i> {group.memberCount} members</span>\n                    <span>{group.isPublic ? 'Public' : 'Private'}</span>\n                  </div>\n                  <div class=\"mt-auto flex gap-2\">\n                     <a href=\"/groups/{group.id}\" class=\"flex-1 text-center px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded-md text-sm font-medium transition-colors\">\n                       View Group\n                     </a>\n                     <button \n                       on:click={() => handleLeave(group.id)}\n                       class=\"px-3 py-2 bg-red-100 hover:bg-red-200 dark:bg-red-900/30 dark:hover:bg-red-900/50 text-red-700 dark:text-red-300 rounded-md text-sm font-medium transition-colors\"\n                       title=\"Leave Group\"\n                     >\n                       <i class=\"fas fa-sign-out-alt\"></i>\n                     </button>\n                  </div>\n                </div>\n              </div>\n            {/each}\n          </div>\n        </div>\n      {/if}\n\n      <!-- Discover Groups Section -->\n      <div>\n        <h2 class=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n          {searchQuery || selectedTopic !== 'all' ? 'Filtered Groups' : 'Discover Groups'}\n        </h2>\n        {#if discoverGroups.length === 0}\n          <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-100 dark:border-gray-700 p-8 text-center\">\n            <div class=\"w-16 h-16 mx-auto bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mb-4\">\n              <i class=\"fas fa-search text-gray-400 dark:text-gray-500 text-2xl\"></i>\n            </div>\n            <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">No groups found</h3>\n            <p class=\"text-gray-600 dark:text-gray-400 mb-6\">\n              {#if searchQuery || selectedTopic !== 'all'}\n                Try adjusting your search or filter criteria.\n              {:else}\n                There are no available groups to join right now. Why not create one?\n              {/if}\n            </p>\n            {#if searchQuery || selectedTopic !== 'all'}\n              <button \n                class=\"px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded-md text-sm font-medium transition-colors\"\n                on:click={() => { searchQuery = ''; selectedTopic = 'all'; }}\n              >\n                Clear Filters\n              </button>\n            {:else}\n               <a \n                href=\"/groups/create\" \n                class=\"inline-flex items-center px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded-md text-sm font-medium transition-colors\"\n              >\n                <i class=\"fas fa-plus mr-2\"></i>\n                Create New Group\n              </a>\n            {/if}\n          </div>\n        {:else}\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {#each discoverGroups as group (group.id)}\n              <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-100 dark:border-gray-700 overflow-hidden flex flex-col\">\n                 {#if group.image}\n                  <img src={group.image} alt={group.name} class=\"w-full h-32 object-cover\"/>\n                {:else}\n                  <div class=\"w-full h-32 bg-gradient-to-r from-indigo-100 to-purple-100 dark:from-indigo-900/30 dark:to-purple-900/30 flex items-center justify-center\">\n                     <i class=\"fas fa-users text-4xl text-indigo-400 dark:text-indigo-600\"></i>\n                  </div>\n                {/if}\n                <div class=\"p-5 flex-1 flex flex-col\">\n                  <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white mb-1\">{group.name}</h3>\n                   <p class=\"text-sm text-gray-500 dark:text-gray-400 mb-3\">Topic: {group.topic}</p>\n                  <p class=\"text-sm text-gray-600 dark:text-gray-300 mb-4 line-clamp-2 flex-1\">{group.description}</p>\n                  <div class=\"flex justify-between items-center text-xs text-gray-500 dark:text-gray-400 mb-4\">\n                    <span><i class=\"fas fa-users mr-1\"></i> {group.memberCount} members</span>\n                    <span>{group.isPublic ? 'Public' : 'Private'}</span>\n                  </div>\n                  <div class=\"mt-auto\">\n                    {#if group.isPublic}\n                      <button \n                        on:click={() => handleJoin(group.id)}\n                        class=\"w-full px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md text-sm font-medium transition-colors\"\n                      >\n                        <i class=\"fas fa-user-plus mr-2\"></i>\n                        Join Group\n                      </button>\n                    {:else}\n                      <button \n                        class=\"w-full px-4 py-2 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-md text-sm font-medium cursor-not-allowed\" disabled\n                      >\n                        <i class=\"fas fa-lock mr-2\"></i>\n                        Request to Join (Private)\n                      </button>\n                    {/if}\n                  </div>\n                </div>\n              </div>\n            {/each}\n          </div>\n        {/if}\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .loader {\n    border: 4px solid rgba(0, 0, 0, 0.1);\n    border-left-color: #4f46e5;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    animation: spin 1s linear infinite;\n  }\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n\n  .line-clamp-2 {\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n</style>"],"names":[],"mappings":";;;MAgCK;MAbC,YAAsB,CAAA;AAGtB,MAAA,cAAc;AAIJ;AAAA,IACZ;AAAA,IACG,GAAA,MAAM,KAAS,IAAA,IAAI,UAAU,IAAI,CAAA,UAAS,MAAM,KAAK,CAAA,CAAA;AAAA;AAIvD,mBAAiB,UAAU,OAAM,CAAC,UAAS;UAEtC,gBAAgB,gBAAgB;AAG/B,WAAgB;AAAA,GACxB;AAGa,YAAU,QAAO,UAAS,MAAM,QAAQ;AAClC,iBAAe,QAAO,UAAK,CAAK,MAAM,QAAQ;;;;;AA0DtD;;;;;;;"}