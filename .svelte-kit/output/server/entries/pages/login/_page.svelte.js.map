{"version":3,"file":"_page.svelte.js","sources":["../../../../../../src/lib/components/Login.svelte","../../../../../../src/routes/login/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { login, loginWithGoogle } from '$lib/authService.js';\n  import { loading, authError, isAuthenticated } from '$lib/stores/authStore.js';\n  import { onMount } from 'svelte';\n  import { browser } from '$app/environment';\n  import { goto } from '$app/navigation';\n  \n  // Accept redirect parameter to forward users after login\n  export let redirectTo = '/';\n  \n  let email = '';\n  let password = '';\n  let localError = '';\n  let validationErrors: {email?: string; password?: string} = {};\n  let isSubmitting = false;\n  let rememberMe = false;\n  let hasFocusedEmail = false;\n  let hasFocusedPassword = false;\n  \n  onMount(() => {\n    if (browser && $isAuthenticated) {\n      // Already logged in, redirect\n      goto(redirectTo);\n    }\n    \n    // Clear any previous auth errors when component mounts\n    authError.set('');\n  });\n  \n  // Validate email format\n  function validateEmail(email: string): boolean {\n    if (!email && !hasFocusedEmail) return true; // Don't validate until user has interacted\n    \n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const isValid = emailRegex.test(email);\n    validationErrors.email = isValid ? undefined : 'Please enter a valid email address';\n    validationErrors = validationErrors; // Trigger reactivity\n    return isValid;\n  }\n  \n  // Validate password length\n  function validatePassword(password: string): boolean {\n    if (!password && !hasFocusedPassword) return true; // Don't validate until user has interacted\n    \n    const isValid = password.length >= 6;\n    validationErrors.password = isValid ? undefined : 'Password must be at least 6 characters';\n    validationErrors = validationErrors; // Trigger reactivity\n    return isValid;\n  }\n  \n  function handleFocus(field: 'email' | 'password'): void {\n    if (field === 'email') hasFocusedEmail = true;\n    if (field === 'password') hasFocusedPassword = true;\n  }\n  \n  async function handleLogin(e: SubmitEvent) {\n    if (!browser) return;\n    \n    e.preventDefault();\n    isSubmitting = true;\n    localError = '';\n    authError.set('');\n    \n    // Validate form inputs\n    const isEmailValid = validateEmail(email);\n    const isPasswordValid = validatePassword(password);\n    \n    if (!isEmailValid || !isPasswordValid) {\n      isSubmitting = false;\n      return;\n    }\n    \n    try {\n      await login(email, password, rememberMe);\n      // Login successful - redirect will be handled by the auth state listener\n    } catch (err) {\n      // Handle specific error messages\n      if (err instanceof Error) {\n        const errorMessage = err.message;\n        if (errorMessage.includes('user-not-found')) {\n          localError = 'No account found with this email. Please check your email or sign up.';\n        } else if (errorMessage.includes('wrong-password')) {\n          localError = 'Incorrect password. Please try again or reset your password.';\n        } else if (errorMessage.includes('too-many-requests')) {\n          localError = 'Too many failed login attempts. Please try again later or reset your password.';\n        } else {\n          localError = 'Login failed. Please check your credentials and try again.';\n        }\n      } else {\n        localError = 'An unexpected error occurred. Please try again later.';\n      }\n    } finally {\n      isSubmitting = false;\n    }\n  }\n  \n  async function handleGoogleLogin() {\n    if (!browser) return;\n    \n    isSubmitting = true;\n    localError = '';\n    authError.set('');\n    \n    try {\n      await loginWithGoogle(rememberMe);\n      // Login successful - redirect will be handled by the auth state listener\n    } catch (err) {\n      // Handle specific Google auth errors\n      if (err instanceof Error) {\n        const errorMessage = err.message;\n        if (errorMessage.includes('popup-closed-by-user')) {\n          localError = 'Google sign-in was cancelled. Please try again.';\n        } else if (errorMessage.includes('account-exists-with-different-credential')) {\n          localError = 'An account already exists with the same email but different sign-in method.';\n        } else {\n          localError = 'Google sign-in failed. Please try again later.';\n        }\n      } else {\n        localError = 'An unexpected error occurred. Please try again later.';\n      }\n    } finally {\n      isSubmitting = false;\n    }\n  }\n</script>\n\n<div class=\"w-full max-w-md mx-auto p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md\">\n  <h2 class=\"text-2xl font-bold mb-6 text-center text-gray-800 dark:text-white\">Log In</h2>\n  \n  {#if redirectTo && redirectTo !== '/'}\n    <div class=\"bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-800 text-blue-700 dark:text-blue-300 px-4 py-3 rounded mb-4\" role=\"alert\">\n      <span class=\"block sm:inline\">You'll be redirected to the requested page after login.</span>\n    </div>\n  {/if}\n  \n  {#if $authError}\n    <div class=\"bg-red-100 dark:bg-red-900/30 border border-red-400 dark:border-red-800 text-red-700 dark:text-red-300 px-4 py-3 rounded mb-4\" role=\"alert\">\n      <span class=\"block sm:inline\">{$authError}</span>\n    </div>\n  {/if}\n  \n  {#if localError}\n    <div class=\"bg-red-100 dark:bg-red-900/30 border border-red-400 dark:border-red-800 text-red-700 dark:text-red-300 px-4 py-3 rounded mb-4\" role=\"alert\">\n      <span class=\"block sm:inline\">{localError}</span>\n    </div>\n  {/if}\n  \n  <form on:submit={handleLogin} class=\"space-y-4\" autocomplete=\"off\">\n    <div>\n      <label for=\"email\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Email</label>\n      <input \n        type=\"email\" \n        id=\"email\" \n        bind:value={email} \n        on:blur={() => validateEmail(email)}\n        on:focus={() => handleFocus('email')}\n        class=\"mt-1 block w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 {validationErrors.email ? 'border-red-500' : ''}\"\n        required\n        autocomplete=\"username\"\n        aria-invalid={validationErrors.email ? 'true' : 'false'}\n        aria-describedby={validationErrors.email ? 'email-error' : undefined}\n      />\n      {#if validationErrors.email}\n        <p id=\"email-error\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">{validationErrors.email}</p>\n      {/if}\n    </div>\n    \n    <div>\n      <label for=\"password\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Password</label>\n      <input \n        type=\"password\" \n        id=\"password\" \n        bind:value={password} \n        on:blur={() => validatePassword(password)}\n        on:focus={() => handleFocus('password')}\n        class=\"mt-1 block w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 {validationErrors.password ? 'border-red-500' : ''}\"\n        required\n        autocomplete=\"current-password\"\n        aria-invalid={validationErrors.password ? 'true' : 'false'}\n        aria-describedby={validationErrors.password ? 'password-error' : undefined}\n      />\n      {#if validationErrors.password}\n        <p id=\"password-error\" class=\"mt-1 text-sm text-red-600 dark:text-red-400\">{validationErrors.password}</p>\n      {/if}\n    </div>\n    \n    <div class=\"flex items-center justify-between\">\n      <div class=\"flex items-center\">\n        <input \n          id=\"remember-me\" \n          name=\"remember-me\" \n          type=\"checkbox\" \n          bind:checked={rememberMe}\n          class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n        >\n        <label for=\"remember-me\" class=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n          Remember me\n        </label>\n      </div>\n      \n      <div class=\"text-sm\">\n        <a href=\"/reset-password\" class=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300\">\n          Forgot password?\n        </a>\n      </div>\n    </div>\n    \n    <div>\n      <button \n        type=\"submit\" \n        class=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n        disabled={$loading || isSubmitting}\n        aria-busy={$loading || isSubmitting}\n      >\n        {#if $loading || isSubmitting}\n          <span class=\"inline-block animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\" aria-hidden=\"true\"></span>\n          <span>Logging in...</span>\n        {:else}\n          Log In\n        {/if}\n      </button>\n    </div>\n  </form>\n  \n  <div class=\"mt-6 relative\">\n    <div class=\"absolute inset-0 flex items-center\">\n      <div class=\"w-full border-t border-gray-300 dark:border-gray-600\"></div>\n    </div>\n    <div class=\"relative flex justify-center text-sm\">\n      <span class=\"px-2 bg-white dark:bg-gray-800 text-gray-500 dark:text-gray-400\">Or continue with</span>\n    </div>\n  </div>\n  \n  <div class=\"mt-6\">\n    <button \n      type=\"button\"\n      on:click={handleGoogleLogin} \n      class=\"w-full flex justify-center items-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n      disabled={$loading || isSubmitting}\n      aria-busy={$loading || isSubmitting}\n    >\n      {#if $loading || isSubmitting}\n        <span class=\"inline-block animate-spin rounded-full h-4 w-4 border-b-2 border-gray-700 dark:border-gray-200 mr-2\" aria-hidden=\"true\"></span>\n      {:else}\n        <svg class=\"h-5 w-5 mr-2\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n          <path d=\"M12.545,12.151L12.545,12.151c0,1.054,0.855,1.909,1.909,1.909h3.536c-0.607,1.972-2.101,3.467-4.26,3.866c-3.431,0.589-6.663-1.727-7.253-5.157c-0.589-3.431,1.727-6.663,5.157-7.253c2.136-0.367,4.296,0.317,5.743,1.878l2.72-2.72c-2.099-2.099-5.271-2.853-8.135-1.879C8.234,3.708,4.766,6.152,3.032,9.686c-2.734,5.63,0.01,12.44,5.639,15.174c5.63,2.734,12.44-0.01,15.174-5.639c1.06-2.17,1.369-4.652,0.845-7.036h-9.687C13.25,12.151,12.545,12.151,12.545,12.151z\" fill=\"#F44336\"/>\n          <path d=\"M12.545,12.151v-3.89h9.687c0.521,2.169,0.246,4.432-0.769,6.406c-0.217,0.436-0.453,0.853-0.725,1.241h-6.284C13.4,15.909,12.545,14.055,12.545,12.151z\" fill=\"#2196F3\"/>\n        </svg>\n        Sign in with Google\n      {/if}\n    </button>\n  </div>\n  \n  <div class=\"mt-6 text-center\">\n    <p class=\"text-sm text-gray-600 dark:text-gray-400\">\n      Don't have an account? \n      <a href=\"/register\" class=\"font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300\">\n        Sign up\n      </a>\n    </p>\n  </div>\n</div>","<script lang=\"ts\">\n  import Login from '$lib/components/Login.svelte';\n  import { isAuthenticated, loading } from '$lib/stores/authStore.js';\n  import { goto } from '$app/navigation';\n  import { onMount } from 'svelte';\n  import { page } from '$app/stores';\n\n  // Get the redirect parameter if present\n  $: redirectTo = $page.url.searchParams.get('redirect') || '/';\n\n  onMount(() => {\n    // Redirect to home or specified redirect path if already authenticated\n    if ($isAuthenticated) {\n      goto(redirectTo);\n    }\n  });\n\n  // Watch for authentication status changes\n  $: if (!$loading && $isAuthenticated) {\n    goto(redirectTo);\n  }\n</script>\n\n<svelte:head>\n  <title>Login - LearnFlow</title>\n</svelte:head>\n\n<div class=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n  {#if $loading}\n    <div class=\"flex flex-col items-center justify-center\">\n      <div class=\"w-16 h-16 border-4 border-t-blue-500 border-blue-200 rounded-full animate-spin\"></div>\n      <p class=\"mt-4 text-gray-600 dark:text-gray-400\">Loading...</p>\n    </div>\n  {:else}\n    <Login {redirectTo} />\n  {/if}\n</div> "],"names":["$.attr_class","$.stringify","$.attr","$.escape","$.store_get"],"mappings":";;;;;;;;;AAQa,MAAA,6CAAa,GAAG;AAEvB,MAAA,QAAQ;AACR,MAAA,WAAW;MAEX,mBAAqD,CAAA;AACrD,MAAA,eAAe;AACf,MAAA,aAAa;;MAkHZ,cAAc,eAAe,KAAG;;;;;;;;;;;;;;;;;+NAwBnB,KAAK,CAAA,GAAAA,WAAA,uLAAAC,UAG2K,iBAAiB,QAAQ,mBAAmB,EAAE,CAAA,EAAA,CAAA,oCAAAC,KAAA,gBAG5N,iBAAiB,QAAQ,SAAS,OAAO,CACrC,GAAAA,KAAA,oBAAA,iBAAiB,QAAQ,gBAAgB,MAAS,CAAA;AAEjE,MAAA,iBAAiB,OAAK;;AACgD,cAAA,OAAA,2EAAAC,YAAA,iBAAiB,KAAK,CAAA;AAAA;;;sMASnF,QAAQ,CAAA,GAAAH,WAAA,uLAAAC,UAGwK,iBAAiB,WAAW,mBAAmB,EAAE,CAAA,EAAA,CAAA,4CAAAC,KAAA,gBAG/N,iBAAiB,WAAW,SAAS,OAAO,CACxC,GAAAA,KAAA,oBAAA,iBAAiB,WAAW,mBAAmB,MAAS,CAAA;AAEvE,MAAA,iBAAiB,UAAQ;;AACgD,cAAA,OAAA,8EAAAC,YAAA,iBAAiB,QAAQ,CAAA;AAAA;;;6LAUrF,YAAU,IAAA,CAAA,2pBAAAD,KAAA,YAAAE,UAAA,iBAAA,CAAA,GAAA,YAAA,OAAA,KAmBJ,cAAY,IAAA,CAAA,GAAAF,KAAA,aAAAE,UAAA,iBAAA,CAAA,GAAA,YAAA,OAAA,KACX,YAAY,CAAA;6DAElB,cAAY;;;;;;;AAwBT,YAAA,OAAA,ivBAAAF,KAAA,YAAAE,UAAA,iBAAA,CAAA,GAAA,YAAA,OAAA,KAAA,+FACC,YAAY,CAAA;6DAElB,cAAY;;;;;;;;;;;;;;;MCzO9B;AAAA,eAAUA,UAAA,iBAAA,CAAA,GAAA,SAAA,IAAA,EAAS,IAAI,aAAa,IAAI,UAAU,KAAK;AAUpB,MAAA,CAAAA,UAAA,iBAAA,CAAA,GAAA,YAAA,OAAA,KAAAA,UAAA,iBAAA,CAAA,GAAA,oBAAA,eAAA,GAAA;AACpC,SAAe;AAAA,EACjB;;;;;;;;;;;;;;;;"}