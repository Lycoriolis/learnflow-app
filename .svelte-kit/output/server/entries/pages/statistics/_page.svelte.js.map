{"version":3,"file":"_page.svelte.js","sources":["../../../../../../src/lib/components/StatCard.svelte","../../../../../../src/routes/statistics/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  export let title: string;\n  export let value: string;\n  export let icon: string = 'fa-chart-line';\n  export let color: 'blue' | 'green' | 'red' | 'yellow' | 'indigo' | 'purple' | 'gray' = 'blue';\n\n  // Color style mapping types\n  type ColorStyle = {\n    bg: string;\n    text: string;\n  };\n\n  type ColorClasses = {\n    [key in typeof color]: ColorStyle;\n  };\n\n  // Map color names to Tailwind CSS classes\n  const colorClasses: ColorClasses = {\n    blue: {\n      bg: 'bg-blue-100 dark:bg-blue-900',\n      text: 'text-blue-600 dark:text-blue-300'\n    },\n    green: {\n      bg: 'bg-green-100 dark:bg-green-900',\n      text: 'text-green-600 dark:text-green-300'\n    },\n    red: {\n      bg: 'bg-red-100 dark:bg-red-900',\n      text: 'text-red-600 dark:text-red-300'\n    },\n    yellow: {\n      bg: 'bg-yellow-100 dark:bg-yellow-900',\n      text: 'text-yellow-600 dark:text-yellow-300'\n    },\n    indigo: {\n      bg: 'bg-indigo-100 dark:bg-indigo-900',\n      text: 'text-indigo-600 dark:text-indigo-300'\n    },\n    purple: {\n      bg: 'bg-purple-100 dark:bg-purple-900',\n      text: 'text-purple-600 dark:text-purple-300'\n    },\n    gray: {\n      bg: 'bg-gray-100 dark:bg-gray-800',\n      text: 'text-gray-600 dark:text-gray-300'\n    }\n  };\n\n  // Get color classes based on the color prop\n  $: colorStyle = colorClasses[color];\n</script>\n\n<div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow duration-300\">\n  <div class=\"flex items-center justify-between\">\n    <div>\n      <p class=\"text-sm font-medium text-gray-500 dark:text-gray-400 mb-1\">{title}</p>\n      <p class=\"text-2xl font-bold text-gray-900 dark:text-white\">{value}</p>\n    </div>\n    <div class=\"h-12 w-12 {colorStyle.bg} rounded-full flex items-center justify-center {colorStyle.text}\">\n      <i class=\"fas {icon} text-xl\"></i>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { isAuthenticated, loading as authLoading } from '$lib/stores/authStore.js';\n  import { userProfile, userProfileLoading } from '$lib/stores/userProfileStore.js';\n  import { focusSessions, todos, exerciseSessions } from '$lib/stores/pipStores';\n  import { goto } from '$app/navigation';\n  import StatCard from '$lib/components/StatCard.svelte';\n  import FocusTimeChart from '$lib/components/FocusTimeChart.svelte';\n  import type { UserPreferences } from '$lib/services/userService';\n\n  // Chart unit\n  let unit: 'day' | 'week' | 'month' = 'week';\n\n  // Derived stats\n  let totalFocus = 0;\n  let sessionCount = 0;\n  let avgSession = 0;\n  let longestSession = 0;\n  let tasksDone = 0;\n  let exercisesCompleted = 0;\n  let enrollmentsCount = 0;\n\n  function goToLogin() {\n    goto('/login?redirect=/statistics');\n  }\n\n  // Recompute stats whenever relevant stores update\n  $: if ($isAuthenticated && !$authLoading && !$userProfileLoading && $userProfile) {\n    const sessions = $focusSessions;\n    sessionCount = sessions.length;\n    totalFocus = sessions.reduce((sum, s) => sum + s.duration / 60, 0);\n    avgSession = sessionCount ? totalFocus / sessionCount : 0;\n    longestSession = sessions.reduce((max, s) => Math.max(max, s.duration / 60), 0);\n    tasksDone = $todos.filter(t => t.completed).length;\n    exercisesCompleted = $exerciseSessions.filter(es => es.completed).length;\n    \n    // Safe access to preferences with proper type checking\n    const preferences: UserPreferences = $userProfile.preferences || {};\n    const enrollments = preferences.enrollments || [];\n    enrollmentsCount = enrollments.filter(e => e.progress > 0 && e.progress < 100).length;\n  }\n</script>\n\n<svelte:head>\n  <title>Statistics | LearnFlow</title>\n</svelte:head>\n\n{#if $authLoading}\n  <div class=\"flex items-center justify-center min-h-[60vh]\"><i class=\"fas fa-spinner fa-spin text-4xl text-indigo-500\"></i></div>\n{:else if !$isAuthenticated}\n  <div class=\"flex flex-col items-center justify-center min-h-[60vh]\">\n    <p class=\"text-lg text-gray-600 dark:text-gray-300 mb-4\">Log in to view your statistics.</p>\n    <button class=\"px-6 py-2 bg-indigo-600 text-white rounded\" on:click={goToLogin}>Log In</button>\n  </div>\n{:else if $userProfileLoading}\n  <div class=\"flex items-center justify-center min-h-[60vh]\"><i class=\"fas fa-spinner fa-spin text-4xl text-indigo-500\"></i></div>\n{:else}\n  <div class=\"max-w-5xl mx-auto px-4 py-6 space-y-8\">\n    <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white\">Your Statistics</h1>\n    <div class=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n      <StatCard title=\"Focus Sessions\" value={String(sessionCount)} icon=\"fa-stopwatch\" color=\"yellow\" />\n      <StatCard title=\"Total Focus (min)\" value={String(Math.round(totalFocus))} icon=\"fa-clock\" color=\"purple\" />\n      <StatCard title=\"Avg Session (min)\" value={avgSession.toFixed(1)} icon=\"fa-chart-line\" color=\"blue\" />\n      <StatCard title=\"Longest Session\" value={longestSession.toFixed(1)} icon=\"fa-mountain\" color=\"indigo\" />\n      <StatCard title=\"Tasks Completed\" value={String(tasksDone)} icon=\"fa-list-check\" color=\"green\" />\n      <StatCard title=\"Exercises Completed\" value={String(exercisesCompleted)} icon=\"fa-pencil-alt\" color=\"gray\" />\n      <StatCard title=\"Courses In Progress\" value={String(enrollmentsCount)} icon=\"fa-book-open\" color=\"red\" />\n    </div>\n    <div class=\"space-y-4\">\n      <div class=\"flex items-center space-x-4\">\n        <label class=\"font-medium\">View by:</label>\n        <select bind:value={unit} class=\"rounded border-gray-300 p-2 bg-white dark:bg-gray-800\">\n          <option value=\"day\">Daily</option>\n          <option value=\"week\">Weekly</option>\n          <option value=\"month\">Monthly</option>\n        </select>\n      </div>\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow p-4\" style=\"height: 300px;\">\n        <FocusTimeChart sessions={$focusSessions} timeUnit={unit} />\n      </div>\n    </div>\n  </div>\n{/if}"],"names":["$.escape","$.attr_class","$.stringify","$.store_get","authLoading"],"mappings":";;;;;;;;MAiDK;MAhDQ,QAAa,QAAA,OAAA;MACb,QAAa,QAAA,OAAA;AACb,MAAA,iCAAe,eAAe;AAC9B,MAAA,mCAA4E,MAAM;QAavF,eAA0B;AAAA,IAC9B,MAAI;AAAA,MACF,IAAI;AAAA,MACJ,MAAM;AAAA;IAER,OAAK;AAAA,MACH,IAAI;AAAA,MACJ,MAAM;AAAA;IAER,KAAG;AAAA,MACD,IAAI;AAAA,MACJ,MAAM;AAAA;IAER,QAAM;AAAA,MACJ,IAAI;AAAA,MACJ,MAAM;AAAA;IAER,QAAM;AAAA,MACJ,IAAI;AAAA,MACJ,MAAM;AAAA;IAER,QAAM;AAAA,MACJ,IAAI;AAAA,MACJ,MAAM;AAAA;IAER,MAAI;AAAA,MACF,IAAI;AAAA,MACJ,MAAM;AAAA;;AAKP,eAAa,aAAa,KAAK;0QAMwC,KAAK,CAAA,oEAAAA,YACd,KAAK,CAAA,kBAAAC,WAAA,aAAAC,UAE7C,WAAW,EAAE,CAAA,kDAAAA,UAAiD,WAAW,IAAI,CAAA,EAAA,CAAA,MAAAD,WAAA,OAAAC,UACnF,IAAI,CAAA,UAAA,CAAA;;;;;;ACjDnB,MAAA,OAAiC;AAGjC,MAAA,aAAa;AACb,MAAA,eAAe;AACf,MAAA,aAAa;AACb,MAAA,iBAAiB;AACjB,MAAA,YAAY;AACZ,MAAA,qBAAqB;AACrB,MAAA,mBAAmB;AAO2D,MAAAC,UAAA,iBAAA,CAAA,GAAA,oBAAA,eAAA,KAAA,CAAAA,UAAA,iBAAA,CAAA,GAAA,gBAAAC,OAAA,KAAA,CAAAD,UAAA,iBAAA,IAAA,uBAAA,kBAAA,KAAAA,UAAA,iBAAA,CAAA,GAAA,gBAAA,WAAA,GAAA;UAC1E,WAAQA,UAAA,iBAAA,CAAA,GAAA,kBAAA,aAAA;AACd,mBAAe,SAAS;AACxB,iBAAa,SAAS,OAAM,CAAE,KAAK,MAAM,MAAM,EAAE,WAAW,IAAI,CAAC;AACjE,iBAAa,eAAe,aAAa,eAAe;AACxD,qBAAiB,SAAS,QAAQ,KAAK,MAAM,KAAK,IAAI,KAAK,EAAE,WAAW,EAAE,GAAG,CAAC;AAC9E,gBAASA,UAAA,iBAAA,CAAA,GAAA,UAAA,KAAA,EAAU,OAAO,CAAA,MAAK,EAAE,SAAS,EAAE;AAC5C,yBAAkBA,UAAA,iBAAA,CAAA,GAAA,qBAAA,gBAAA,EAAqB,OAAO,CAAA,OAAM,GAAG,SAAS,EAAE;AAG5D,UAAA,0EAA4C,eAAW,CAAA;UACvD,cAAc,YAAY,eAAW,CAAA;AAC3C,uBAAmB,YAAY,OAAO,CAAA,MAAK,EAAE,WAAW,KAAK,EAAE,WAAW,GAAG,EAAE;AAAA,EACjF;;;;;;;;;;;;;;;;;;MAoB4C,OAAA,OAAO,YAAY;AAAA;;;;;;MAChB,OAAA,OAAO,KAAK,MAAM,UAAU,CAAA;AAAA;;;;;;aAC5B,WAAW,QAAQ,CAAC;AAAA;;;;;;aACtB,eAAe,QAAQ,CAAC;AAAA;;;;;;MACxB,OAAA,OAAO,SAAS;AAAA;;;;;;MACZ,OAAA,OAAO,kBAAkB;AAAA;;;;;;MACzB,OAAA,OAAO,gBAAgB;AAAA;;;;;;gBAYd;AAAA;;;;;;;"}