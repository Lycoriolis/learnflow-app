{"version":3,"file":"_page.svelte.js","sources":["../../../../../../src/routes/settings/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { isAuthenticated, user, loading as authLoading, logout } from '$lib/stores/authStore.js';\n  import { goto } from '$app/navigation';\n  import type { UserProfile } from '$lib/services/userService.js';\n  import { userProfile, userProfileLoading, updateUserProfile } from '$lib/stores/userProfileStore.js';\n  import { getCurrentUser, updateProfile as firebaseUpdateProfile } from '$lib/authService.js';\n  import type { TimerSettings } from '$lib/stores/pipStores.js';\n  import { timerSettings } from '$lib/stores/pipStores.js';\n\n  // Local form state\n  let displayName = '';\n  let email = '';\n  let theme = 'auto';\n  let durations = { work: 25, shortBreak: 5, longBreak: 15, interval: 4 };\n  let saving = false;\n  let error: string | null = null;\n\n  let unsubProfile: () => void;\n  let unsubTimer: () => void;\n\n  onMount(() => {\n    unsubProfile = userProfile.subscribe((profile: UserProfile | null) => {\n      if (profile) {\n        displayName = profile.displayName || '';\n        email = profile.email;\n        // load theme if stored\n        theme = profile.preferences?.theme || 'auto';\n      }\n    });\n    // load timer settings store\n    unsubTimer = timerSettings.subscribe((s: TimerSettings) => {\n      durations = { \n        work: Math.round(s.workDuration/60), \n        shortBreak: Math.round(s.shortBreakDuration/60), \n        longBreak: Math.round(s.longBreakDuration/60), \n        interval: s.longBreakInterval\n      };\n    });\n    return () => { \n      if (unsubProfile) unsubProfile();\n      if (unsubTimer) unsubTimer();\n    };\n  });\n\n  async function saveSettings() {\n    saving = true;\n    error = null;\n    try {\n      // Update Firebase auth displayName\n      const currentUser = getCurrentUser();\n      if (currentUser && displayName !== currentUser.displayName) {\n        await firebaseUpdateProfile(currentUser, { displayName });\n      }\n      // Update preferences in Firestore\n      if (currentUser) {\n        await updateUserProfile(currentUser.uid, { \n          displayName, \n          preferences: { \n            theme,\n            // preserve other preferences\n            ...($userProfile?.preferences || {})\n          }\n        });\n      }\n      // Update Pomodoro durations store\n      timerSettings.set({\n        workDuration: durations.work * 60,\n        shortBreakDuration: durations.shortBreak * 60,\n        longBreakDuration: durations.longBreak * 60,\n        longBreakInterval: durations.interval\n      });\n    } catch (e:any) {\n      console.error(e);\n      error = e.message;\n    } finally {\n      saving = false;\n    }\n  }\n\n  function goToLogin() {\n    goto('/login?redirect=/settings');\n  }\n</script>\n\n<svelte:head>\n  <title>Account Settings | LearnFlow</title>\n</svelte:head>\n\n<div class=\"max-w-3xl mx-auto px-4 py-6\">\n  {#if $authLoading || $userProfileLoading}\n    <div class=\"flex justify-center items-center min-h-[50vh]\">\n      <i class=\"fas fa-spinner fa-spin text-3xl text-indigo-500\"></i>\n    </div>\n  {:else if $isAuthenticated && $user && $userProfile}\n    <h1 class=\"text-2xl font-bold mb-4\">Account Settings</h1>\n    {#if error}\n      <div class=\"text-red-500 mb-4\">{error}</div>\n    {/if}\n    <div class=\"bg-white dark:bg-gray-800 shadow rounded-lg p-6 space-y-6\">\n      <!-- Profile Info -->\n      <div>\n        <h2 class=\"text-lg font-semibold mb-2\">Profile</h2>\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label for=\"displayName\" class=\"block text-sm font-medium mb-1\">Display Name</label>\n            <input type=\"text\" id=\"displayName\" bind:value={displayName} class=\"w-full rounded border-gray-300 dark:border-gray-600 p-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\" />\n          </div>\n          <div>\n            <label for=\"email\" class=\"block text-sm font-medium mb-1\">Email (cannot change)</label>\n            <input type=\"email\" id=\"email\" value={email} readonly class=\"w-full rounded border-gray-300 dark:border-gray-600 p-2 bg-gray-100 dark:bg-gray-600 text-gray-500\" />\n          </div>\n        </div>\n      </div>\n\n      <!-- Preferences -->\n      <div>\n        <h2 class=\"text-lg font-semibold mb-2\">Preferences</h2>\n        <div class=\"space-y-4\">\n          <div>\n            <label for=\"theme\" class=\"block text-sm font-medium mb-1\">Theme</label>\n            <select id=\"theme\" bind:value={theme} class=\"w-full rounded border-gray-300 dark:border-gray-600 p-2 bg-white dark:bg-gray-700\">\n              <option value=\"auto\">Auto</option>\n              <option value=\"light\">Light</option>\n              <option value=\"dark\">Dark</option>\n            </select>\n          </div>\n          <div>\n            <fieldset class=\"space-y-4\">\n              <legend class=\"text-sm font-medium mb-1\">Pomodoro Durations (minutes)</legend>\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label for=\"work-duration\" class=\"block text-sm text-gray-500\">Work Duration</label>\n                  <input type=\"number\" id=\"work-duration\" min=\"1\" bind:value={durations.work} class=\"w-full rounded border-gray-300 dark:border-gray-600 p-2\" />\n                </div>\n                <div>\n                  <label for=\"short-break\" class=\"block text-sm text-gray-500\">Short Break</label>\n                  <input type=\"number\" id=\"short-break\" min=\"1\" bind:value={durations.shortBreak} class=\"w-full rounded border-gray-300 dark:border-gray-600 p-2\" />\n                </div>\n                <div>\n                  <label for=\"long-break\" class=\"block text-sm text-gray-500\">Long Break</label>\n                  <input type=\"number\" id=\"long-break\" min=\"1\" bind:value={durations.longBreak} class=\"w-full rounded border-gray-300 dark:border-gray-600 p-2\" />\n                </div>\n                <div>\n                  <label for=\"interval\" class=\"block text-sm text-gray-500\">Sessions Before Long Break</label>\n                  <input type=\"number\" id=\"interval\" min=\"1\" bind:value={durations.interval} class=\"w-full rounded border-gray-300 dark:border-gray-600 p-2\" />\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"flex justify-end space-x-2\">\n        <button class=\"px-4 py-2 bg-gray-300 rounded hover:bg-gray-400\" on:click={() => logout()}>Sign Out</button>\n        <button class=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700\" on:click={saveSettings} disabled={saving}>\n          {saving ? 'Saving...' : 'Save Changes'}\n        </button>\n      </div>\n    </div>\n  {:else}\n    <div class=\"text-center py-20\">\n      <p class=\"text-lg text-gray-600 dark:text-gray-300 mb-4\">Please log in to manage your settings.</p>\n      <button class=\"px-6 py-2 bg-indigo-600 text-white rounded\" on:click={goToLogin}>Log In</button>\n    </div>\n  {/if}\n</div>\n"],"names":["$.attr","$.escape"],"mappings":";;;;;;;;AAWM,MAAA,cAAc;AACd,MAAA,QAAQ;MAER,YAAS;AAAA,IAAK,MAAM;AAAA,IAAI,YAAY;AAAA,IAAG,WAAW;AAAA,IAAI,UAAU;AAAA;AAChE,MAAA,SAAS;;;;;;;;;;;;;;+VA2F6C,WAAW,CAAA,8PAAAA,KAAA,SAIrB,KAAK,CAAA,8yBAAAA,KAAA,SAuBuB,UAAU,IAAI,CAIhB,8MAAAA,KAAA,SAAA,UAAU,UAAU,CAIrB,2MAAAA,KAAA,SAAA,UAAU,SAAS,CAAA,uNAAAA,KAAA,SAIrB,UAAU,QAAQ,CAAA,sTAAAA,KAAA,YAU8B,QAAM,IAAA,CAAA,IAAAC,YAC7F,cAAc,CAAA;AAAA;;;;;;;;"}