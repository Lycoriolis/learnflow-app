{"version":3,"file":"_server.ts.js","sources":["../../../../../../../src/lib/services/scoreService.ts","../../../../../../../src/routes/api/score/+server.ts"],"sourcesContent":["// src/lib/services/scoreService.ts\nimport { pool } from './userService.server.js';\n// Import the new server-side content service and necessary types\nimport { getAllContentItemsByType } from '$lib/server/contentService';\nimport type { ContentManifestItem } from '$lib/server/contentService'; \n\n// Define a type similar to the old CourseStructure based on ContentManifestItem\ninterface CourseStructureLike extends ContentManifestItem {\n  modules: ContentManifestItem[]; // Assuming modules are children of type 'module'\n}\n\n/**\n * Calculates a user score on a 0–5 scale.\n * Combines weighted sub-scores for courses, exercises, and flashcards.\n */\nexport async function calculateUserScore(userId: string): Promise<number> {\n  try {\n    // Run all database queries concurrently to reduce total wait time\n    const [lessonResults, exerciseResults, flashcardResults, courseStructures] = await Promise.all([\n      // 1. Course progress query\n      pool.query(\n        `SELECT COUNT(DISTINCT reference_id) AS viewed FROM activities WHERE user_id=$1 AND event_type='view_lesson'`,\n        [userId]\n      ),\n\n      // 2. Exercise completion query\n      pool.query(\n        `SELECT\n          SUM(CASE WHEN event_type='complete_exercise' THEN 1 ELSE 0 END) AS completed,\n          SUM(CASE WHEN event_type='start_exercise' THEN 1 ELSE 0 END) AS started\n         FROM activities\n         WHERE user_id=$1`,\n        [userId]\n      ),\n\n      // 3. Flashcard success query\n      pool.query(\n        `SELECT\n          SUM(CASE WHEN event_type='flashcard_review' AND (metadata->>'success')::boolean THEN 1 ELSE 0 END) AS success,\n          SUM(CASE WHEN event_type='flashcard_review' THEN 1 ELSE 0 END) AS total\n         FROM activities\n         WHERE user_id=$1`,\n        [userId]\n      ),\n\n      // 4. Load course structures using the new helper\n      getAllCourseStructuresLike()\n    ]);\n\n    // Extract and calculate course ratio\n    const viewedLessons = Number(lessonResults.rows[0]?.viewed || 0);\n    const courses = Object.values(courseStructures) as CourseStructureLike[];\n\n    // Calculate total lessons based on the new structure (assuming lessons are children of modules)\n    const totalLessons = courses.reduce((courseSum, course) => {\n        // Find module children\n        const modules = course.children?.filter(child => child.type === 'module') || [];\n        // Sum lessons within each module\n        const lessonsInCourse = modules.reduce((moduleSum, module) => {\n            const lessons = module.children?.filter(child => child.type === 'lesson') || [];\n            return moduleSum + lessons.length;\n        }, 0);\n        return courseSum + lessonsInCourse;\n    }, 0);\n\n    const courseRatio = totalLessons ? viewedLessons / totalLessons : 0;\n\n    // Extract and calculate exercise ratio\n    const completed = Number(exerciseResults.rows[0]?.completed || 0);\n    const started = Number(exerciseResults.rows[0]?.started || 0);\n    const exerciseRatio = started ? completed / started : 0;\n\n    // Extract and calculate flashcard ratio\n    const success = Number(flashcardResults.rows[0]?.success || 0);\n    const total = Number(flashcardResults.rows[0]?.total || 0);\n    const flashcardRatio = total ? success / total : 0;\n\n    // Calculate weighted score\n    const weights = { course: 0.6, exercise: 0.2, flashcard: 0.2 };\n    const rawScore = (\n      courseRatio * weights.course +\n      exerciseRatio * weights.exercise +\n      flashcardRatio * weights.flashcard\n    );\n\n    // Scale to 0–5 and round to 2 decimal places\n    return Math.round(Math.min(5, Math.max(0, rawScore * 5)) * 100) / 100;\n  } catch (error) {\n    console.error('Error calculating user score:', error);\n    return 0; // Default score on error\n  }\n}\n\n// Create namespace for the function to allow for caching\ninterface GetAllCourseStructuresLike {\n  (this: void): Promise<Record<string, CourseStructureLike>>;\n  cache?: Record<string, CourseStructureLike>;\n}\n\n/**\n * Helper: load all course structures using the new contentService.\n */\nconst getAllCourseStructuresLike: GetAllCourseStructuresLike = async function(): Promise<Record<string, CourseStructureLike>> {\n  // Use memoization to cache course structures\n  if (!getAllCourseStructuresLike.cache) {\n      try {\n          // Fetch all items of type 'course' from the 'courses' manifest\n          const courses = await getAllContentItemsByType('courses', 'course');\n\n          // Transform ContentManifestItem[] to the required Record<string, CourseStructureLike>\n          getAllCourseStructuresLike.cache = courses.reduce<Record<string, CourseStructureLike>>((acc, course) => {\n              acc[course.id] = {\n                  ...course,\n                  modules: course.children?.filter(child => child.type === 'module') || []\n              };\n              return acc;\n          }, {});\n      } catch (error) {\n          console.error(\"Failed to load course structures using contentService:\", error);\n          getAllCourseStructuresLike.cache = {}; // Return empty object on error\n      }\n  }\n\n  return getAllCourseStructuresLike.cache;\n}","import type { RequestHandler } from '@sveltejs/kit';\nimport { calculateUserScore } from '$lib/services/scoreService';\n\nexport const GET: RequestHandler = async ({ locals }) => {\n  // Get user ID from the decoded token\n  const userId = locals.user?.uid;\n  \n  if (!userId) {\n    console.error('Unauthorized attempt to access score API');\n    return new Response(JSON.stringify({ error: 'Unauthorized' }), { status: 401, headers: { 'Content-Type': 'application/json' } });\n  }\n  \n  try {\n    console.log(`Calculating score for user: ${userId}`);\n    const score = await calculateUserScore(userId);\n    return new Response(JSON.stringify({ score }), { headers: { 'Content-Type': 'application/json' } });\n  } catch (err) {\n    console.error('Score error:', err);\n    return new Response(JSON.stringify({ error: 'Failed to compute score' }), { status: 500, headers: { 'Content-Type': 'application/json' } });\n  }\n};"],"names":[],"mappings":"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"}