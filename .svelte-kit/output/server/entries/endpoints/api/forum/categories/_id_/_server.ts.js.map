{"version":3,"file":"_server.ts.js","sources":["../../../../../../../../../src/routes/api/forum/categories/[id]/+server.ts"],"sourcesContent":["import type { RequestHandler } from '@sveltejs/kit';\nimport { updateCategory, deleteCategory } from '$lib/services/forums/forumService';\n\n// Placeholder for categories API route\n\nexport const PUT: RequestHandler = async ({ request, params }) => {\n  const categoryId = params.id;\n  \n  if (!categoryId) {\n    return new Response(JSON.stringify({ message: 'Category ID is required' }), { \n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  const data = await request.json();\n  \n  try {\n    const updatedCategory = await updateCategory(categoryId, {\n      name: data.name,\n      description: data.description,\n      icon: data.icon,\n      color: data.color\n    });\n    \n    if (!updatedCategory) {\n      return new Response(JSON.stringify({ message: 'Category not found' }), { \n        status: 404,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    return new Response(JSON.stringify(updatedCategory), { \n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    console.error('Error updating category:', error);\n    return new Response(JSON.stringify({ message: 'Failed to update category' }), { \n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n};\n\nexport const DELETE: RequestHandler = async ({ params }) => {\n  const categoryId = params.id;\n  \n  if (!categoryId) {\n    return new Response(JSON.stringify({ message: 'Category ID is required' }), { \n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  try {\n    const success = await deleteCategory(categoryId);\n    \n    if (!success) {\n      return new Response(JSON.stringify({ message: 'Category not found' }), { \n        status: 404,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    return new Response(JSON.stringify({ message: 'Category deleted successfully' }), { \n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error: any) {\n    console.error('Error deleting category:', error);\n    // Check if the error is because there are topics in this category\n    if (error.message && error.message.includes('Cannot delete category with topics')) {\n      return new Response(JSON.stringify({ message: 'Cannot delete category that contains topics. Move or delete the topics first.' }), { \n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    return new Response(JSON.stringify({ message: 'Failed to delete category' }), { \n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n};"],"names":[],"mappings":";AAKO,MAAM,MAAsB,OAAO,EAAE,SAAS,aAAa;AAChE,QAAM,aAAa,OAAO;AAE1B,MAAI,CAAC,YAAY;AACR,WAAA,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,0BAAA,CAA2B,GAAG;AAAA,MAC1E,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAAA,CAC/C;AAAA,EAAA;AAGG,QAAA,OAAO,MAAM,QAAQ,KAAK;AAE5B,MAAA;AACI,UAAA,kBAAkB,MAAM,eAAe,YAAY;AAAA,MACvD,MAAM,KAAK;AAAA,MACX,aAAa,KAAK;AAAA,MAClB,MAAM,KAAK;AAAA,MACX,OAAO,KAAK;AAAA,IAAA,CACb;AAED,QAAI,CAAC,iBAAiB;AACb,aAAA,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,qBAAA,CAAsB,GAAG;AAAA,QACrE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAAA,CAC/C;AAAA,IAAA;AAGH,WAAO,IAAI,SAAS,KAAK,UAAU,eAAe,GAAG;AAAA,MACnD,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAAA,CAC/C;AAAA,WACM,OAAO;AACN,YAAA,MAAM,4BAA4B,KAAK;AACxC,WAAA,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,4BAAA,CAA6B,GAAG;AAAA,MAC5E,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAAA,CAC/C;AAAA,EAAA;AAEL;AAEO,MAAM,SAAyB,OAAO,EAAE,aAAa;AAC1D,QAAM,aAAa,OAAO;AAE1B,MAAI,CAAC,YAAY;AACR,WAAA,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,0BAAA,CAA2B,GAAG;AAAA,MAC1E,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAAA,CAC/C;AAAA,EAAA;AAGC,MAAA;AACI,UAAA,UAAU,MAAM,eAAe,UAAU;AAE/C,QAAI,CAAC,SAAS;AACL,aAAA,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,qBAAA,CAAsB,GAAG;AAAA,QACrE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAAA,CAC/C;AAAA,IAAA;AAGI,WAAA,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,gCAAA,CAAiC,GAAG;AAAA,MAChF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAAA,CAC/C;AAAA,WACM,OAAY;AACX,YAAA,MAAM,4BAA4B,KAAK;AAE/C,QAAI,MAAM,WAAW,MAAM,QAAQ,SAAS,oCAAoC,GAAG;AAC1E,aAAA,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,gFAAA,CAAiF,GAAG;AAAA,QAChI,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAAA,CAC/C;AAAA,IAAA;AAGI,WAAA,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,4BAAA,CAA6B,GAAG;AAAA,MAC5E,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAAA,CAC/C;AAAA,EAAA;AAEL;"}