{"version":3,"file":"_server.ts.js","sources":["../../../../../../../../src/routes/api/forum/topics/+server.ts"],"sourcesContent":["import type { RequestHandler } from '@sveltejs/kit';\nimport { getTopics, createForumTopic, updateTopic, deleteTopic } from '$lib/services/forums/forumService';\n\nexport const GET: RequestHandler = async ({ url }) => {\n  const categoryId = url.searchParams.get('categoryId');\n  let topics;\n\n  try {\n    topics = await getTopics();\n    if (categoryId) {\n      topics = topics.filter(t => t.categoryId === categoryId);\n    }\n    return new Response(JSON.stringify(topics), { status: 200 });\n  } catch (error) {\n    console.error('Error fetching topics:', error);\n    return new Response('Failed to fetch topics', { status: 500 });\n  }\n};\n\nexport const POST: RequestHandler = async ({ request }) => {\n  const { title, categoryId, authorId, content } = await request.json();\n\n  if (!title || !categoryId || !authorId || !content) {\n    const missing = [];\n    if (!title) missing.push('title');\n    if (!categoryId) missing.push('categoryId');\n    if (!authorId) missing.push('authorId');\n    if (!content) missing.push('content');\n    return new Response(`Missing required fields: ${missing.join(', ')}`, { status: 400 });\n  }\n\n  try {\n    const newTopic = await createForumTopic({ title, categoryId, authorId, content });\n    return new Response(JSON.stringify(newTopic), { status: 201 });\n  } catch (error) {\n    console.error('Error creating topic:', error);\n    return new Response('Failed to create topic', { status: 500 });\n  }\n};\n\nexport const PUT: RequestHandler = async ({ request }) => {\n  const { id, ...data } = await request.json();\n\n  if (!id) {\n    return new Response('Topic ID is required', { status: 400 });\n  }\n\n  try {\n    const topic = await updateTopic(id, data);\n    // Explicitly check for null since updateTopic returns null when topic isn't found\n    if (topic === null) {\n      return new Response('Topic not found', { status: 404 });\n    }\n    return new Response(JSON.stringify(topic), { status: 200 });\n  } catch (error) {\n    console.error('Error updating topic:', error);\n    return new Response('Failed to update topic', { status: 500 });\n  }\n};\n\nexport const DELETE: RequestHandler = async ({ url }) => {\n  const id = url.searchParams.get('id');\n\n  if (!id) {\n    return new Response('Topic ID is required', { status: 400 });\n  }\n\n  try {\n    const result = await deleteTopic(id);\n    // Explicitly check for false as deleteTopic returns a boolean\n    if (result === false) {\n      return new Response('Topic not found', { status: 404 });\n    }\n    return new Response(JSON.stringify({ success: true }), { status: 200 });\n  } catch (error) {\n    console.error('Error deleting topic:', error);\n    return new Response('Failed to delete topic', { status: 500 });\n  }\n};"],"names":[],"mappings":";AAGO,MAAM,MAAsB,OAAO,EAAE,UAAU;AACpD,QAAM,aAAa,IAAI,aAAa,IAAI,YAAY;AAChD,MAAA;AAEA,MAAA;AACF,aAAS,MAAM,UAAU;AACzB,QAAI,YAAY;AACd,eAAS,OAAO,OAAO,CAAK,MAAA,EAAE,eAAe,UAAU;AAAA,IAAA;AAElD,WAAA,IAAI,SAAS,KAAK,UAAU,MAAM,GAAG,EAAE,QAAQ,KAAK;AAAA,WACpD,OAAO;AACN,YAAA,MAAM,0BAA0B,KAAK;AAC7C,WAAO,IAAI,SAAS,0BAA0B,EAAE,QAAQ,KAAK;AAAA,EAAA;AAEjE;AAEO,MAAM,OAAuB,OAAO,EAAE,cAAc;AACnD,QAAA,EAAE,OAAO,YAAY,UAAU,YAAY,MAAM,QAAQ,KAAK;AAEpE,MAAI,CAAC,SAAS,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS;AAClD,UAAM,UAAU,CAAC;AACjB,QAAI,CAAC,MAAe,SAAA,KAAK,OAAO;AAChC,QAAI,CAAC,WAAoB,SAAA,KAAK,YAAY;AAC1C,QAAI,CAAC,SAAkB,SAAA,KAAK,UAAU;AACtC,QAAI,CAAC,QAAiB,SAAA,KAAK,SAAS;AAC7B,WAAA,IAAI,SAAS,4BAA4B,QAAQ,KAAK,IAAI,CAAC,IAAI,EAAE,QAAQ,IAAA,CAAK;AAAA,EAAA;AAGnF,MAAA;AACI,UAAA,WAAW,MAAM,iBAAiB,EAAE,OAAO,YAAY,UAAU,SAAS;AACzE,WAAA,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG,EAAE,QAAQ,KAAK;AAAA,WACtD,OAAO;AACN,YAAA,MAAM,yBAAyB,KAAK;AAC5C,WAAO,IAAI,SAAS,0BAA0B,EAAE,QAAQ,KAAK;AAAA,EAAA;AAEjE;AAEO,MAAM,MAAsB,OAAO,EAAE,cAAc;AACxD,QAAM,EAAE,IAAI,GAAG,KAAS,IAAA,MAAM,QAAQ,KAAK;AAE3C,MAAI,CAAC,IAAI;AACP,WAAO,IAAI,SAAS,wBAAwB,EAAE,QAAQ,KAAK;AAAA,EAAA;AAGzD,MAAA;AACF,UAAM,QAAQ,MAAM,YAAY,IAAI,IAAI;AAExC,QAAI,UAAU,MAAM;AAClB,aAAO,IAAI,SAAS,mBAAmB,EAAE,QAAQ,KAAK;AAAA,IAAA;AAEjD,WAAA,IAAI,SAAS,KAAK,UAAU,KAAK,GAAG,EAAE,QAAQ,KAAK;AAAA,WACnD,OAAO;AACN,YAAA,MAAM,yBAAyB,KAAK;AAC5C,WAAO,IAAI,SAAS,0BAA0B,EAAE,QAAQ,KAAK;AAAA,EAAA;AAEjE;AAEO,MAAM,SAAyB,OAAO,EAAE,UAAU;AACvD,QAAM,KAAK,IAAI,aAAa,IAAI,IAAI;AAEpC,MAAI,CAAC,IAAI;AACP,WAAO,IAAI,SAAS,wBAAwB,EAAE,QAAQ,KAAK;AAAA,EAAA;AAGzD,MAAA;AACI,UAAA,SAAS,MAAM,YAAY,EAAE;AAEnC,QAAI,WAAW,OAAO;AACpB,aAAO,IAAI,SAAS,mBAAmB,EAAE,QAAQ,KAAK;AAAA,IAAA;AAExD,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC,GAAG,EAAE,QAAQ,KAAK;AAAA,WAC/D,OAAO;AACN,YAAA,MAAM,yBAAyB,KAAK;AAC5C,WAAO,IAAI,SAAS,0BAA0B,EAAE,QAAQ,KAAK;AAAA,EAAA;AAEjE;"}