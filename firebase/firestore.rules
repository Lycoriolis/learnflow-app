rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
         request.auth.token.email in ['admin@learnflow.app']);
    }
    
    function isCurrentUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isDocumentOwner(resourceData) {
      return isSignedIn() && resourceData.userId == request.auth.uid;
    }
    
    function isCourseCreator(resourceData) {
      return isSignedIn() && resourceData.createdBy == request.auth.uid;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read and update their own profile
      allow read: if isCurrentUser(userId) || isAdmin();
      allow update: if isCurrentUser(userId) || isAdmin();
      // Only the user themselves can create their profile
      allow create: if isCurrentUser(userId) && request.resource.data.uid == userId;
    }
    
    // Courses collection
    match /courses/{courseId} {
      // Anyone can read courses
      allow read: if true;
      // Only admins and course creators can create, update or delete courses
      allow create: if isAdmin();
      allow update: if isAdmin() || isCourseCreator(resource.data);
      allow delete: if isAdmin();
    }
    
    // Lessons collection
    match /lessons/{lessonId} {
      // Anyone can read lessons
      allow read: if true;
      // Only admins can create, update or delete lessons
      allow create, update, delete: if isAdmin();
    }
    
    // Exercises collection
    match /exercises/{exerciseId} {
      // Anyone can read exercises
      allow read: if true;
      // Only admins can create, update or delete exercises
      allow create, update, delete: if isAdmin();
    }
    
    // Enrollments collection
    match /enrollments/{enrollmentId} {
      // Users can read enrollments they're part of
      allow read: if isSignedIn() && 
                   (resource.data.userId == request.auth.uid || isAdmin());
      // Users can create enrollments for themselves
      allow create: if isSignedIn() && 
                     request.resource.data.userId == request.auth.uid;
      // Users can update their own enrollments (e.g., progress)
      allow update: if isSignedIn() && 
                     resource.data.userId == request.auth.uid;
      // Only admins can delete enrollments
      allow delete: if isAdmin();
    }
    
    // Activities collection
    match /activities/{activityId} {
      // Users can read their own activities and admins can read all
      allow read: if isSignedIn() && 
                   (resource.data.userId == request.auth.uid || isAdmin());
      // Users can create activities for themselves
      allow create: if isSignedIn() && 
                     request.resource.data.userId == request.auth.uid;
      // Only admins can update or delete activities
      allow update, delete: if isAdmin();
    }
    
    // Forum categories
    match /forumCategories/{categoryId} {
      // Anyone can read forum categories
      allow read: if true;
      // Only admins can create, update or delete forum categories
      allow create, update, delete: if isAdmin();
    }
    
    // Forum topics
    match /forumTopics/{topicId} {
      // Anyone can read forum topics
      allow read: if true;
      // Any signed-in user can create a topic
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      // Users can update topics they authored, admins can update any
      allow update: if isSignedIn() && 
                     (resource.data.authorId == request.auth.uid || isAdmin());
      // Only admins can delete topics
      allow delete: if isAdmin();
    }
    
    // Forum posts
    match /forumPosts/{postId} {
      // Anyone can read forum posts
      allow read: if true;
      // Any signed-in user can create a post
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      // Users can update posts they authored, admins can update any
      allow update: if isSignedIn() && 
                     (resource.data.authorId == request.auth.uid || isAdmin());
      // Authors can delete their own posts within 30 minutes, admins anytime
      allow delete: if isSignedIn() && 
                     (resource.data.authorId == request.auth.uid && 
                      (request.time.toMillis() - resource.data.timestamp.toMillis()) < 1800000) || 
                     isAdmin();
    }
    
    // Study groups
    match /groups/{groupId} {
      // Anyone can view public groups, private groups require membership
      allow read: if resource.data.isPrivate == false || 
                    (isSignedIn() && 
                     (request.auth.uid in resource.data.members || isAdmin()));
      // Any signed-in user can create a group
      allow create: if isSignedIn() && 
                     request.resource.data.createdBy == request.auth.uid &&
                     request.auth.uid in request.resource.data.members;
      // Group creators and admins can update groups
      allow update: if isSignedIn() && 
                     (resource.data.createdBy == request.auth.uid || isAdmin());
      // Only admins can delete groups
      allow delete: if isAdmin();
    }
  }
}